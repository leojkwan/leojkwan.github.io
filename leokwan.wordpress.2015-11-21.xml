<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2015-11-21 20:05"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Leo Kwan</title>
<link>http://leojkwan.com</link>
<description>Blog</description>
<pubDate>Sat, 21 Nov 2015 20:05:30 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://leojkwan.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>leojkwan</wp:author_login>
  <wp:author_email>leokwanbt14@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[Leo Kwan]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>4624</wp:term_id>
  <wp:category_nicename>asides</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Asides]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>656</wp:term_id>
  <wp:category_nicename>code</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Code]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>64</wp:term_id>
  <wp:category_nicename>personal</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Personal]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>269407</wp:term_id>
  <wp:category_nicename>sports-performance</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Sports Performance]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>7689823</wp:term_id>
  <wp:tag_slug>code-2</wp:tag_slug>
  <wp:tag_name><![CDATA[code]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>36769</wp:term_id>
  <wp:tag_slug>design-pattern</wp:tag_slug>
  <wp:tag_name><![CDATA[design pattern]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>220348</wp:term_id>
  <wp:tag_slug>flatiron</wp:tag_slug>
  <wp:tag_name><![CDATA[flatiron]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>324281</wp:term_id>
  <wp:tag_slug>ios</wp:tag_slug>
  <wp:tag_name><![CDATA[iOS]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>318</wp:term_id>
  <wp:tag_slug>tech</wp:tag_slug>
  <wp:tag_name><![CDATA[tech]]></wp:tag_name>
</wp:tag>
<wp:term>
  <wp:term_id>325655</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>primary-menu</wp:term_slug>
  <wp:term_name><![CDATA[Primary Menu]]></wp:term_name>
</wp:term>
<wp:term>
  <wp:term_id>3342</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>social-menu</wp:term_slug>
  <wp:term_name><![CDATA[Social Menu]]></wp:term_name>
</wp:term>
<wp:term>
  <wp:term_id>56947384</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>sports-performance</wp:term_slug>
  <wp:term_name><![CDATA[SPORTS PERFORMANCE]]></wp:term_name>
</wp:term>
<wp:term>
  <wp:term_id>324281</wp:term_id>
  <wp:term_taxonomy>jetpack-portfolio-type</wp:term_taxonomy>
  <wp:term_slug>ios</wp:term_slug>
  <wp:term_parent/>
  <wp:term_name><![CDATA[iOS]]></wp:term_name>
</wp:term>
<wp:term>
  <wp:term_id>56947384</wp:term_id>
  <wp:term_taxonomy>jetpack-portfolio-type</wp:term_taxonomy>
  <wp:term_slug>sports-performance</wp:term_slug>
  <wp:term_parent/>
  <wp:term_name><![CDATA[SPORTS PERFORMANCE]]></wp:term_name>
</wp:term>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title> &#187; Leo Kwan</title>
		<link>http://leojkwan.com</link>
	</image>
	<item>
  <title/>
  <link>http://leojkwan.com/</link>
  <pubDate>Tue, 19 May 2015 17:14:03 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=6</guid>
  <description/>
  <content:encoded><![CDATA[<h1><strong>Hi, I'm Leo Kwan.</strong></h1>
I'm a mobile software developer writing about stuff I learn along the way.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>6</wp:post_id>
  <wp:post_date>2015-05-19 17:14:03</wp:post_date>
  <wp:post_date_gmt>2015-05-19 17:14:03</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>aboutme</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[834]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[templates/home-page.php]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Blog</title>
  <link>http://leojkwan.com/blog/</link>
  <pubDate>Tue, 19 May 2015 17:32:56 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=12</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2015-05-19 17:32:56</wp:post_date>
  <wp:post_date_gmt>2015-05-19 17:32:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>blog</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Science of Taking Flight</title>
  <link>http://leojkwan.com/?p=17</link>
  <pubDate>Tue, 19 May 2015 17:46:46 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">https://leokwanblog.wordpress.com/?p=17</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2015-05-19 17:46:46</wp:post_date>
  <wp:post_date_gmt>2015-05-19 17:46:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-science-of-taking-flight</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11361992628]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Accepted to The Flatiron School for iOS Development</title>
  <link>http://leojkwan.com/2015/05/22/accepted-to-the-flatiron-school/</link>
  <pubDate>Fri, 22 May 2015 19:01:20 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=35</guid>
  <description/>
  <content:encoded><![CDATA[It’s official- I got accepted into The Flatiron School for iOS Development this Summer. The Flatiron School is a 12 week immersive coding camp that provides admitted students with the practical skills necessary to work as professional web and mobile app developers. I just finished my second year as a strength coach for New York University, so the transition from sports performance to computer programming cannot be any faster. Nevertheless, I am extremely excited to get going with the program come June.

<!--more-->

About a year ago, I had absolutely no background in computer programming. Like many other late bloomers learning computer programming, my only resources were books and the helpful people on TreeHouse and Code School- two very popular video-tutorial sites for beginners programmers which, in my opinion, helped me the most back when I started out. As my basic competence of the programming concepts grew, specifically in <a href="https://www.youtube.com/watch?v=SS-9y0H3Si8">object-oriented programming</a>, I soon realized that if I ever planned to write production level code, I would eventually need to let go of Gregg Pollack (listen to his <a href="https://www.codeschool.com/screencasts/founder-s-talk" target="_blank">story</a> on founding Code School) and <a href="https://teamtreehouse.com/amit" target="_blank">Amit Bijlani</a>'s virtual hand, so to speak, and learn from more personal instruction. The Flatiron School offers just that.

And while I am 100% certain that anyone can learn a programming language of choice on his or her own, I knew it would have been a long battle for me, considering I was still trying to digest basic HTML and CSS at the start of 2015. If I didn’t get into Flatiron, I would have done just that, trying to learn everything solo. As of this post, I am already one week in the program, and considering everything I’ve learned in just these five days— thank god I got in.]]></content:encoded>
  <excerpt:encoded><![CDATA[It’s official- I got accepted into The Flatiron School for iOS Development this Summer. The Flatiron School is a 12 week immersive coding camp that provides admitted students with the practical skills necessary to work as professional web and mobile app developers. I just finished my second year as a strength coach for New York University, so the transition from sports performance to computer programming cannot be any faster. Nevertheless, I am extremely excited to get going with the program come June.]]></excerpt:encoded>
  <wp:post_id>35</wp:post_id>
  <wp:post_date>2015-05-22 19:01:20</wp:post_date>
  <wp:post_date_gmt>2015-05-22 19:01:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>accepted-to-the-flatiron-school</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <category domain="post_tag" nicename="flatiron"><![CDATA[flatiron]]></category>
  <category domain="post_tag" nicename="ios"><![CDATA[iOS]]></category>
  <category domain="post_tag" nicename="tech"><![CDATA[tech]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11434256592]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[242]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>github</title>
  <link>http://leojkwan.com/2015/06/07/github/</link>
  <pubDate>Sun, 07 Jun 2015 05:03:25 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=49</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>49</wp:post_id>
  <wp:post_date>2015-06-07 05:03:25</wp:post_date>
  <wp:post_date_gmt>2015-06-07 05:03:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>github</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="social-menu"><![CDATA[Social Menu]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[49]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://github.com/leojkwan]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Flatiron Blog Post #1: Understanding Pointers in Objective-C.</title>
  <link>http://leojkwan.com/2015/06/07/pointers/</link>
  <pubDate>Sun, 07 Jun 2015 14:37:21 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=52</guid>
  <description/>
  <content:encoded><![CDATA[<p class="intro" style="text-align:justify;">It’s the start of my second week here at The Flatiron School, and over the last 6 days, our iOS class has been going over the foundation of Objective-C, the language that writes up most of the popular iPhone apps we use.</p>
<p style="text-align:justify;">We've been reviewing the 150 hours of assigned pre-work given to us the month beforehand, and on top of that, we have to write and present a technical blog post every week or so on a topic of our choice. Students like myself who were assigned to present this week were given some slack as to how technical our initial post needed to be.</p>
<p style="text-align:justify;">With that said, I decided to blog about my first impressions of the school as well as a concept that I struggled with ever since I started learning Objective-C.<!--more--></p>
<p style="text-align:justify;">The concept of pointers in the form of asterisks before declaring methods and variables didn’t quite make sense. I dedicated many hours chipping at the labs and readings every single day from the moment I got accepted, but even then, some of these concepts just wouldn’t stick.</p>


[caption id="attachment_231" align="aligncenter" width="367"]<a href="https://leokwanblog.files.wordpress.com/2015/06/objective-c_succinctly_image016.png" rel="http://code.tutsplus.com/tutorials/objective-c-succinctly-data-types--mobile-21986"><img class=" wp-image-231" src="https://leokwanblog.files.wordpress.com/2015/06/objective-c_succinctly_image016.png" alt="objective-c_succinctly_image016" width="367" height="201" /></a> A Pointer address 'pointing' to a memory location in RAM.[/caption]
<p style="text-align:justify;">When we need to store data, our programs have to save information in memory, or RAM of your computer, and we refer to those stored values by their memory addresses. So of course, the solution is to store these values in variables and objects, which are the building blocks that eventually make our cool apps. The catch is having to add what’s called a pointer next to the name we call our object by, because the pointer can simply ‘point’ to the location in memory that the object lives in, without the need for excess copies of the same value.</p>
<p style="text-align:justify;"><strong>Note</strong>- <em>Objective is the first language that I am formally learning so bear with me if the concepts I mention extend beyond Objective -C or object-oriented programming— I’m sure they do since the language is built on C.</em></p>
<p style="text-align:justify;">In this example below, we have a sentence in the form of an NSString(contains words and text) named ‘greeting’. The instance of this NSString lives in your computer’s memory somewhere, and the ‘greeting’ pointer _points_ to the address for where its sentence lives.</p>


[code language="objc"]
NSString *greeting = @&quot;Hi, I am really a reference to a memory address&quot;;
[/code]

<p style="text-align:justify;">This concept is still a bit tricky because not all data types such as primitives need pointers- but for the most part, when we declare objects in Objective-C, you can only access them through pointers. The idea is based on memory efficiency and it makes sense. Eventually, we’ll be dealing with objects that are a whole lot bigger and more complex than a simply an NSString. Instead of making copies of the object every time it’s called, pointers simply reference where objects are in memory to access its values.</p>
<p style="text-align:justify;">Like many people, when I try to learn something that doesn’t come second nature, I will naturally try to take experiences and principles that I’m familiar to form some sort of relationship with it is I’m trying to understand.  One of our classmates Henry used a great <a href="https://henrydchan.wordpress.com/2015/06/09/recursive-fibofinder/">example</a> today to conceptualize how the nested multi-layer process of recursions in functions can relate to the movie, “Inception”, where the storyline takes place in dreams within dreams… within dreams.</p>
<p style="text-align:justify;">I, too, love the film, and as a result, I’ve also taken some themes found in Inception to help me grasps some concepts found in computer programming . One of them is the linking the relationship found in pointers with objects to Cobb’s haunting relationship with Maul, the dead wife that Cobb keeps alive by reliving memories of her. You can see where I’m going this.</p>
<p style="text-align:justify;">Now that we understand pointers, we can see that objects are never really living inside other objects. Instead, they just contain references, or pointers, that knows where its value is stored in memory. Here’s a better visual:</p>


[code language="objc"]
@interface Cobb : Person

@property (nonatomic) Person *wife;
[/code]

<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;">Everyday is something new at Flatiron, and everyday is another series of challenges here. Because of that, I think it’s why all of us here find learning so stressful, but exhilarating. Personally, I fail so fast and so often that the moment I have the slightest Eureka moment and dare celebrate, the next lab/ lecture/concept just slaps me down to earth reminding me that there’s a long way to go. But one thing is certain, these next 3 months will be short of analogies.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[Test]]></excerpt:encoded>
  <wp:post_id>52</wp:post_id>
  <wp:post_date>2015-06-07 14:37:21</wp:post_date>
  <wp:post_date_gmt>2015-06-07 14:37:21</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>pointers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11429411915]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[test]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[222]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Slice 1</title>
  <link>http://leojkwan.com/aboutme/slice-1-2/</link>
  <pubDate>Sun, 07 Jun 2015 15:12:26 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/slice-1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>56</wp:post_id>
  <wp:post_date>2015-06-07 15:12:26</wp:post_date>
  <wp:post_date_gmt>2015-06-07 15:12:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>slice-1-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>6</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/slice-1.jpg</wp:attachment_url>
</item>
<item>
  <title>linkedin</title>
  <link>http://leojkwan.com/2015/06/07/linkedin/</link>
  <pubDate>Sun, 07 Jun 2015 15:16:19 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=57</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>57</wp:post_id>
  <wp:post_date>2015-06-07 15:16:19</wp:post_date>
  <wp:post_date_gmt>2015-06-07 15:16:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>linkedin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="social-menu"><![CDATA[Social Menu]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/in/leojkwan]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[57]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Screen Shot 2015-06-09 at 12.12.39 PM</title>
  <link>http://leojkwan.com/2015/06/07/pointers/screen-shot-2015-06-09-at-12-12-39-pm/</link>
  <pubDate>Tue, 09 Jun 2015 17:19:45 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/screen-shot-2015-06-09-at-12-12-39-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>82</wp:post_id>
  <wp:post_date>2015-06-09 17:19:45</wp:post_date>
  <wp:post_date_gmt>2015-06-09 17:19:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-06-09-at-12-12-39-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>52</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/screen-shot-2015-06-09-at-12-12-39-pm.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-06-09 at 12.12.39 PM</title>
  <link>http://leojkwan.com/2015/06/07/pointers/screen-shot-2015-06-09-at-12-12-39-pm-2/</link>
  <pubDate>Tue, 09 Jun 2015 17:21:39 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/screen-shot-2015-06-09-at-12-12-39-pm1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>85</wp:post_id>
  <wp:post_date>2015-06-09 17:21:39</wp:post_date>
  <wp:post_date_gmt>2015-06-09 17:21:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-06-09-at-12-12-39-pm-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>52</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/screen-shot-2015-06-09-at-12-12-39-pm1.png</wp:attachment_url>
</item>
<item>
  <title>video</title>
  <link>http://leojkwan.com/2015/06/24/123/video/</link>
  <pubDate>Wed, 24 Jun 2015 02:50:57 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/video.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>122</wp:post_id>
  <wp:post_date>2015-06-24 02:50:57</wp:post_date>
  <wp:post_date_gmt>2015-06-24 02:50:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>video</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>123</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/video.gif</wp:attachment_url>
</item>
<item>
  <title>Moving table view cells across sections in a to-do list app.</title>
  <link>http://leojkwan.com/2015/06/24/123/</link>
  <pubDate>Wed, 24 Jun 2015 03:27:27 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=123</guid>
  <description/>
  <content:encoded><![CDATA[<p id="f6b5" class="intro">Over the past week, I’ve been working on a small to-do list app that categorizes your personal tasks based on type and category.</p>
<p id="29e7" class="graf--p">One of the bigger challenges I had while building my to-do list app was moving tasks around across different sections. And while Apple has its own proprietary method for managing and reordering its cells via an optional button, I wanted my cells to move based on button presses instead, specifically with the popular <a class="markup--anchor markup--p-anchor" href="https://github.com/CEWendel/SWTableViewCell" rel="nofollow">SWTableViewCell</a> cocoapod.</p>
<p class="graf--p"><!--more--></p>

<figure id="d6f6" class="graf--figure">
<div class="aspectRatioPlaceholder is-locked">
<div class="aspect-ratio-fill"> <img src="https://camo.githubusercontent.com/c138fcd3df24ae1d91f8bf6feb51a1cf111606a4/687474703a2f2f692e696d6775722e636f6d2f6e6a4b436a4b382e676966" alt="" /></div>
</div>
</figure>
<p id="9caf" class="graf--p">It’s amazing how much is available through cocoaPods and open source code in general. No need to re-invent the wheel or spend hours trying to create this functionality 4 weeks into my education here at the Flatiron. All I had to do was install the “pod”, import the files into my program and call the methods provided for me.</p>

<figure id="ef52" class="graf--figure graf--layoutInsetLeft">
<div class="aspectRatioPlaceholder is-locked">
<div class="aspect-ratio-fill">

<hr />

</div>
<img class="graf-image aligncenter" src="https://d262ilb51hltx0.cloudfront.net/max/563/1*NxqI2thB32PKQ4nRaKHaHQ.png" alt="" width="378" height="664" />

</div>
</figure>
<p class="graf--p">A couple days ago, I showed one of our instructors Tom my working (sort of) version of my to-do list, and he suggested that since my tasks are sectioned off by their type or priority, it would be pretty neat to integrate up and down buttons in my left swipe utility buttons, which allows my tasks to re-categorize — or in this instance: re-prioritize.</p>
<p class="graf--p">For example, if I added a task to the <strong class="markup--strong markup--p-strong">start </strong>section such as… “<em class="markup--em markup--p-em">brainstorming killer app ideas with Team iOS 0615”</em>, perhaps I’d like it so serve as a future reminder even after starting the said task. A handy feature would be to move the specific task object in my “starting tasks” list and move it over to the “continue tasks” list. Initially it seemed easy, but as I started working on the method responsible for button presses with the left swipe… my app kept crashing on button press.</p>


<hr />

<blockquote>
<p class="graf--p">Eventually, I realized I was spending all my efforts moving a cell around from section to section without ever updating my data model of arrays holding each and every specific type of task.</p>
</blockquote>
<p id="be00" class="graf--p">I create instances of category objects on a button press, and that will eventually be a specified property of a task object that gets instantiated on the “save” button press.<em class="markup--em markup--p-em"> And after some team debugging with the great instructors at Flatiron, I was guided in the right direction to remedy the problem.</em></p>


[code language="objc"]
- (void)swipeableTableViewCell:(SWTableViewCell *)cell
didTriggerLeftUtilityButtonWithIndex:(NSInteger)index {switch (index);
[/code]

The method above if for creating button actions based on the utility button pressed. I had to program not only for the table view cells to update on delete/move, I also needed to <strong class="markup--strong markup--p-strong">remove</strong> a task from its source index row and section to its desired index row and section.
<p class="intro">In english speak, it would go like this:</p>
1) grab the <span style="text-decoration:underline;">cur</span><span style="text-decoration:underline;">rent index path</span>
2) create <span style="text-decoration:underline;">new index path</span> using count of nextSectionArray and next section (currentIP.section +1)

3) store the specific task in a variable I want to pull out from the appropriate section arrays, and index row.

4) remove the specific task from the original array

5) add the specific task to an array corresponding to the new index path (created in STEP 2)
<p class="intro">In code:</p>


[code language="objc"]
NSIndexPath *currentIndexPath = [self.tableView indexPathForCell:cell];
NSIndexPath *desiredIndexPath = [NSIndexPath indexPathForRow: (nextSectionArray.count -1)
                                                   inSection:(currentIndexPath.section +1)];

NSMutableArray *thisSectionArray = self.dataStore.listOfSections[currentIndexPath.section];
NSMutableArray *nextSectionArray = self.dataStore.listOfSections[currentIndexPath.section + 1];

[thisSectionArray removeObject: taskToMove];
[nextSectionArray addObject: taskToMove];

[self.tableView reloadData];
[/code]

<strong>And it worked! The task is now able to traverse through different sections — and not crash the app.</strong>
<p class="graf--p"><a href="https://leokwanblog.files.wordpress.com/2015/05/untitled-2.gif"><img class="  wp-image-198 aligncenter" src="https://leokwanblog.files.wordpress.com/2015/05/untitled-2.gif?w=164" alt="Untitled-2" width="259" height="461" /></a></p>
<p id="73eb" class="graf--p graf--last">The lesson I got out of this specific problem was that if you’re planning to move things, particularly objects contained in different sections and nested in two dimensional arrays, make sure your data models are updated and fool-proofed for all scenarios, such as moving objects in arrays that are nil.</p>


<hr />]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>123</wp:post_id>
  <wp:post_date>2015-06-24 03:27:27</wp:post_date>
  <wp:post_date_gmt>2015-06-24 03:27:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>123</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11976524438]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[198]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>video</title>
  <link>http://leojkwan.com/?attachment_id=128</link>
  <pubDate>Wed, 24 Jun 2015 03:29:41 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/video1.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>128</wp:post_id>
  <wp:post_date>2015-06-24 03:29:41</wp:post_date>
  <wp:post_date_gmt>2015-06-24 03:29:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>video-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/video1.gif</wp:attachment_url>
</item>
<item>
  <title>IMG_2029</title>
  <link>http://leojkwan.com/aboutme/img_2029/</link>
  <pubDate>Sat, 27 Jun 2015 16:17:58 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/img_2029.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>197</wp:post_id>
  <wp:post_date>2015-06-27 16:17:58</wp:post_date>
  <wp:post_date_gmt>2015-06-27 16:17:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_2029</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>6</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/img_2029.jpg</wp:attachment_url>
</item>
<item>
  <title>Untitled-2</title>
  <link>http://leojkwan.com/aboutme/untitled-2/</link>
  <pubDate>Sat, 27 Jun 2015 16:18:28 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/untitled-2.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>198</wp:post_id>
  <wp:post_date>2015-06-27 16:18:28</wp:post_date>
  <wp:post_date_gmt>2015-06-27 16:18:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>untitled-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>6</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/untitled-2.gif</wp:attachment_url>
</item>
<item>
  <title>IMG_2029</title>
  <link>http://leojkwan.com/aboutme/img_2029-2/</link>
  <pubDate>Sat, 27 Jun 2015 16:18:53 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/img_20291.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>199</wp:post_id>
  <wp:post_date>2015-06-27 16:18:53</wp:post_date>
  <wp:post_date_gmt>2015-06-27 16:18:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_2029-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>6</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/img_20291.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_2029 copy</title>
  <link>http://leojkwan.com/aboutme/img_2029-copy/</link>
  <pubDate>Sat, 27 Jun 2015 16:32:36 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/img_2029-copy.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>201</wp:post_id>
  <wp:post_date>2015-06-27 16:32:36</wp:post_date>
  <wp:post_date_gmt>2015-06-27 16:32:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_2029-copy</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>6</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/img_2029-copy.jpg</wp:attachment_url>
</item>
<item>
  <title>learn_love_code_FIS</title>
  <link>http://leojkwan.com/2015/05/22/accepted-to-the-flatiron-school/img_1339/</link>
  <pubDate>Sat, 27 Jun 2015 17:05:11 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/img_1339.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>219</wp:post_id>
  <wp:post_date>2015-06-27 17:05:11</wp:post_date>
  <wp:post_date_gmt>2015-06-27 17:05:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1339</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>35</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/img_1339.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IMG_1339</title>
  <link>http://leojkwan.com/2015/05/22/accepted-to-the-flatiron-school/img_1339-2/</link>
  <pubDate>Sat, 27 Jun 2015 17:09:12 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/img_13391.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>220</wp:post_id>
  <wp:post_date>2015-06-27 17:09:12</wp:post_date>
  <wp:post_date_gmt>2015-06-27 17:09:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1339-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>35</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/img_13391.jpg</wp:attachment_url>
</item>
<item>
  <title>FIS_Learn-Love-Code</title>
  <link>http://leojkwan.com/2015/05/22/accepted-to-the-flatiron-school/img_1338/</link>
  <pubDate>Sat, 27 Jun 2015 17:23:06 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/img_1338.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>222</wp:post_id>
  <wp:post_date>2015-06-27 17:23:06</wp:post_date>
  <wp:post_date_gmt>2015-06-27 17:23:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1338</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>35</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/img_1338.jpg</wp:attachment_url>
</item>
<item>
  <title>Untitled-2 copy</title>
  <link>http://leojkwan.com/2015/06/24/123/untitled-2-copy/</link>
  <pubDate>Sat, 27 Jun 2015 17:30:06 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/untitled-2-copy.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>223</wp:post_id>
  <wp:post_date>2015-06-27 17:30:06</wp:post_date>
  <wp:post_date_gmt>2015-06-27 17:30:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>untitled-2-copy</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>123</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/untitled-2-copy.gif</wp:attachment_url>
</item>
<item>
  <title>objective-c_succinctly_image016</title>
  <link>http://leojkwan.com/2015/06/07/pointers/objective-c_succinctly_image016/</link>
  <pubDate>Sat, 27 Jun 2015 22:57:25 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/objective-c_succinctly_image016.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>231</wp:post_id>
  <wp:post_date>2015-06-27 22:57:25</wp:post_date>
  <wp:post_date_gmt>2015-06-27 22:57:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>objective-c_succinctly_image016</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>52</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/objective-c_succinctly_image016.png</wp:attachment_url>
</item>
<item>
  <title>Day1</title>
  <link>http://leojkwan.com/2015/05/22/accepted-to-the-flatiron-school/day1/</link>
  <pubDate>Sat, 27 Jun 2015 23:40:51 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/day1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>242</wp:post_id>
  <wp:post_date>2015-06-27 23:40:51</wp:post_date>
  <wp:post_date_gmt>2015-06-27 23:40:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>day1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>35</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/day1-e1435448541762.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:1242;s:6:"height";i:2208;s:4:"file";s:8:"day1.jpg";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Weeks 1 &amp; 2 at The Flatiron School.</title>
  <link>http://leojkwan.com/2015/06/12/week-1-2-summary-at-flatiron/</link>
  <pubDate>Fri, 12 Jun 2015 20:32:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=245</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 1</span></h2>
<p class="intro" style="text-align:center;">Deploy on Day 1.</p>
It is the almost the end of week 1 here at the Flatiron School, a coding school that cultivates professional, entry-level computer programmers in a matter of 3 months. On the first day, one of the instructors told me to enjoy every moment because things move so fast here, and he couldn’t be more accurate. As of this post, it’s already the end of week 1, and for me, all 5 days have felt like a long string of days. All the lectures, introductions and exhilaration feels like is one continuous day, kind of like they’re all concatenated to one another. …wait a second. We also went right into action on our very first day by tackling our first coding lab with the classmates next to us. No prior lecture— it was just us and what we knew coming into the program after the 150 hours of assigned pre-work.<!--more-->

The assignment essentially asked us to create a questionnaire in the Xcode console that help us learn more about our classmates. It seemed pretty daunting at first, but soon after my neighbors and I collaborated on breaking down the lab into smaller sub-tasks, it was a successful team effort from then on. The lab was called 'Deploy on Day 1', and we reason why we were thrown into the fire our first day was so that we could overcome the imposter syndrome of a software developer. Granted, the final lab was no material worthy of the App Store, but it was a powerful start to Day 1.

<img class="  wp-image-219 alignright" src="https://leokwanblog.files.wordpress.com/2015/05/img_1339.jpg?w=300" alt="learn_love_code_FIS" width="284" height="284" />

After spending most of our morning on the questionnaire lab, we were given an introductory talk by Avi, a founder of The Flatiron School.
<blockquote>He said to our class, by the time you finish this program, <strong>your lives will be completely different</strong>.</blockquote>
I wouldn't doubt that. I’ve grown so much since this past Monday after walking through the Flatiron doors, with a big Learn, Love, Code greeting your way in. Everyday is something new, and everyday is another series of challenges.

Because of that, I think it’s why all of us students find this process so stressful, yet addicting. I fail so fast and so often, that the moment I have the slightest Eureka moment and dare celebrate with my arms up, the next lab/ lecture/concept just smashes me back down to earth reminding me that— it’s just the beginning.

[caption id="attachment_250" align="aligncenter" width="377"]<a href="https://leokwanblog.files.wordpress.com/2015/06/img_1337.jpg"><img class="  wp-image-250" src="https://leokwanblog.files.wordpress.com/2015/06/img_1337.jpg?w=300" alt="quote" width="377" height="377" /></a> One of many motivational quotes on the walls of The Flatiron School.[/caption]

<hr />

<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 2</span></h2>
<p class="intro" style="text-align:center;">The Week of Blackjack.</p>
It felt like the workload at Flatiron slowed down a bit in intensity, but I think I’ve just gotten acclimated to the everyday demands. There is so still so much to learn and incomplete labs to finish, but aside from that, I’m feeling okay with my pace of learning and my progress this week. We began to work with UIViews, and even though I feel like I’m not yet ready to move on, it’s probably best to learn the visuals so that I can begin connecting the core principles with the interface.
This entire week has been a series of labs predicated around the game of blackjack. It started with just the logic. Figuring out how to deal and hit and update the score was the most challenging part for me. The user interface material is definitely the easier half to grasp. Eventually I got most of the wiring done and I put cards on the screen when a button was clicked. Gotta keep moving. There are simply way too many things to learn in these few months and I can’t wait to get cracking at my own personal projects.
<p class="intro">Happy Hour, Flatiron Presents and Meetups.</p>
There is also so much going on even after class is over. It doesn't always pertain to iOS Development but it's fun to sit in and absorb the tech scene in it's entirety.

Every month, the flatiron school hosts an in-house happy-hour open for all Flatiron students- alumni or current- reconnect with your classmates and meet with the new. It’s a really positive atmosphere because you know that just about everyone in the room has gone through or currently enduring the vigorous Flatiron program. On top of that, Flatiron School simply tries it’s best to admit good, likable and motivated people. And because of that, it keeps the growing circle a fun one to be a part of.

And if you're too eager to wait until next month for the next happy hour, Flatiron also hosts a meetup every Tuesday, 3-4 pairs of current students from both our Ruby and iOS classes speak for 5-10 minutes each on a project they worked on during their studies (we have to do it). Despite the insurmountable work we already have with an assigned side project that we eventually need to show everyone, it's a nice to sit and support your classmates, even if they're in another cohort and have no idea how their technology or language syntax works.

Lastly, there are language-specific meetups held here occasionally, such as Manhatten.js and other companies our Flatiron Alumni have moved on to work at. This week we had an iOS Flatiron alum stop by to discuss what he and his company, <a href="http://www.cardstreams.io/" target="_blank">Cardstreams</a>, is doing in iOS development. I'm not going to lie, I couldn't keep up with what they were talking about, but the gist of what Cardstreams does delivering your app's content through personalized cards that you can embed on a multitude of web platforms. It reminded me of Google Now's feed, but with this service, apparently all you need are just a few lines of code. I really wanted to participate in the raffle for a Apple Watch, but if order to qualify, I'd have to submit a project utilizing their cards API. If it weren't week two, I'd have been on it immediately, but I barely have <a href="http://leojkwan.com/2015/06/07/pointers/" target="_blank">pointers</a> down right now!

[caption id="attachment_247" align="aligncenter" width="343"]<a href="https://leokwanblog.files.wordpress.com/2015/06/img_1332.jpg"><img class="  wp-image-247" src="https://leokwanblog.files.wordpress.com/2015/06/img_1332.jpg?w=300" alt="cardstreams" width="343" height="343" /></a> Cardstreams.io presenting at The Flatiron School with Apple Watch raffle.[/caption]
<p class="intro">Model View Controllers</p>
Once we wrap up this week, we will move on from the intensive pre-work material, which covered the basis for iOS programming, and we will start working on the interactivity between our data collections and the views we see on the iPhone screen. We’ve already touched on the idea of separating the model-which are the data collections in our program, from the view controller which handles the communication between our app’s logic and it’s visual representation. It’s known as the MVC model, short for model-view-controller. It’s a fantastic concept that ensures that everything in our app is strictly compartmentalized by their sole function.

And that sums up weeks 1 &amp; 2. There is so much going on that it gets hard to keep track of the day's highlights and to write about it. But I have to make the extra effort because I know it'll be worth reading it all again in hindsight. Anyways—on to Week 3.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>245</wp:post_id>
  <wp:post_date>2015-06-12 20:32:00</wp:post_date>
  <wp:post_date_gmt>2015-06-12 20:32:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>week-1-2-summary-at-flatiron</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12103654958]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[263]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>cardstreams</title>
  <link>http://leojkwan.com/2015/06/12/week-1-2-summary-at-flatiron/img_1332/</link>
  <pubDate>Sun, 28 Jun 2015 00:31:21 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/img_1332.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>247</wp:post_id>
  <wp:post_date>2015-06-28 00:31:21</wp:post_date>
  <wp:post_date_gmt>2015-06-28 00:31:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1332</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>245</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/img_1332.jpg</wp:attachment_url>
</item>
<item>
  <title>quote</title>
  <link>http://leojkwan.com/2015/06/12/week-1-2-summary-at-flatiron/img_1337/</link>
  <pubDate>Sun, 28 Jun 2015 00:34:40 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/img_1337.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>250</wp:post_id>
  <wp:post_date>2015-06-28 00:34:40</wp:post_date>
  <wp:post_date_gmt>2015-06-28 00:34:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1337</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>245</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/img_1337.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_1352</title>
  <link>http://leojkwan.com/2015/06/12/week-1-2-summary-at-flatiron/img_1352/</link>
  <pubDate>Sun, 28 Jun 2015 22:18:54 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/img_1352.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>262</wp:post_id>
  <wp:post_date>2015-06-28 22:18:54</wp:post_date>
  <wp:post_date_gmt>2015-06-28 22:18:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1352</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>245</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/img_1352.jpg</wp:attachment_url>
</item>
<item>
  <title>iOS-team</title>
  <link>http://leojkwan.com/2015/06/12/week-1-2-summary-at-flatiron/img_1352-2/</link>
  <pubDate>Sun, 28 Jun 2015 22:19:13 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/06/img_13521.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>263</wp:post_id>
  <wp:post_date>2015-06-28 22:19:13</wp:post_date>
  <wp:post_date_gmt>2015-06-28 22:19:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_1352-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>245</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/06/img_13521.jpg</wp:attachment_url>
</item>
<item>
  <title>Week 3 &amp; Week 4 Summary</title>
  <link>http://leojkwan.com/2015/07/15/week-3-week-4-summary/</link>
  <pubDate>Wed, 15 Jul 2015 17:49:41 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=279</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 3</span></h2>
<p class="intro" style="text-align:center;">Table Views and Datastores.</p>


<hr />

<span style="text-decoration:underline;"><strong>Day 12</strong></span>
Before the day ended yesterday, Tim introduced us to table view controllers, the visual interface that powers a majority of the apps we play with. Just think about any app that scrolls through endless rows. By the time lecture wrapped up, my brain was already heading into power-save mode after spending most of the afternoon tackling navigation controllers, which allow subsequent windows to appear after a button press to more detailed information.
I don’t feel very comfortable with the material, and I’ll probably have to re-watch some of the lectures. Oh yeah— all our lectures and code samples are recorded and posted on GitHub so that we don’t have to stress with getting all the notes and code lab walkthroughs at that very instance. +1 for Flatiron Team.<!--more-->

I usually get to the school half an hour before class begins to get a head start on the day— checking emails, finishing remaining labs, rereading lecture notes, etc . That’s also another nice perk of Flatiron— it’s open 24/7, so you can arrive as early and leave as late as you need to work on remaining assignments and projects. Granted, the instructors are probably not there beyond 7pm, but the entire makes a good effort to be available an hour before class every morning.

Overall, this week was positive and I felt that I was hitting my stride with table views and segues, which is what allow you to go from one screen to the next. Part of the reason why I really understood table views was because I spent the coming weekend tinkering with a small personal project I’ve always wanted to accomplish. It incorporated just about everything we’ve learned to this point so it felt like good timing too; I worked on making my own version of the simple, but ubiquitous <a href="http://leojkwan.com/2015/06/24/123/">to-do list app</a>.
<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 3</span></h2>
<p class="intro" style="text-align:center;">Core Data, Delegates.</p>
As always at the Flatiron School, just as I am barely getting a handle of <img class="wp-image-282  alignright" src="https://leokwanblog.files.wordpress.com/2015/07/ios-simulator-screen-shot-jul-4-2015-9-53-23-am-ed98b4ad573a498c8ac7da5c73e5d00e.png?w=169" alt="iOS Simulator Screen Shot Jul 4, 2015, 9.53.23 AM.ed98b4ad573a498c8ac7da5c73e5d00e" width="158" height="281" />table views, we start Week 4 with the introduction of core data, prototypes and delegates. Those are three powerful concepts.

Just 5 days ago, we were managing table view cells and how to properly display them in our view controllers. Making simple iPhone to-do list apps were still cool then. But now, it’s all about adding persistent storage, or the ability for your apps to save large amounts of information on your phone after you terminate your app. As a end user, nobody thinks about that- I sure didn’t. The idea of saving information, brought from ubiquitous computer commands like Control-Save, seems so obvious, but now that I’m the person behind the screen making it all happen, I truly see data persistence for what it’s really worth.
I’m excited to begin working on my ‘Flatiron Presents’ assignment, in which you must prepare a technical talk on something you’ve made. You also get randomly partnered with a classmate to collaborate on the app or feature you decide to present about. It’s mandatory for every Flatirons student so that we can practice our presentation skills on technical topics. On top of that, Flatiron School advertises it as a weekly meetup event, so anybody can RSVP and come watch your presentation..The pressure!

<strong>Days 19 &amp; 20</strong>

We had a lecture on the history of the internet. At first it seemed unnecessary but I did learn several things. For one thing, the internet is literally just huge wires traveling around the world, lying deep in our ocean beds. There was also a video excerpt from a Charlie Chaplin film comparing technology and machines to the imminent future of our human race. We focused on a memorable quote in that film by Chaplin which I thought that was interesting:
<blockquote> Greed has poisoned men's souls
Has barricaded the world with hate
Has goose-stepped us into misery and bloodshed
We have developed speed, but we have shut ourselves in
Machinery that gives abundance has left us in want
Our knowledge has made us cynical
Our cleverness hard and unkind
We think too much, and feel too little
More than machinery, we need humanity
More than cleverness, we need kindness and gentleness
Without these qualities life will be violent
And all will be lost.</blockquote>
We had this lecture in packed room because the web cohort was in on this as well, and as I watched Chaplin perform the above excerpt, it reminded me what I was really here for. I won’t speak for the other students in the room, but sometimes I forget why I am sitting in front of an operating machine all day figuring out the language it speaks.

<img class=" size-medium wp-image-285 alignleft" src="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-04-at-10-32-01-am-69099ad317aa4a8a84e3a9ddaf28d502.png?w=300" alt="Screen Shot 2015-07-04 at 10.32.01 AM.69099ad317aa4a8a84e3a9ddaf28d502" width="300" height="220" />Ultimately, it’s a means to ultimately help the world— made for humans, by humans. It’s very easy to lose sight of who you’re really doing this for. After all, you are literally staring at a computer screen, which needs to make its way to another digital screen in order to reach your true target, the people. That all sounded real cliche, but when you flip a shit about lines of code long enough, the loss in perspective happens to the best of us.

With that said, stress levels are rising. I am very tired feel flat out smoked. I went super overtime on Friday; I think I left Flatiron at 11pm. I feel like a mess and didn’t expect to reach this state of mental fatigue, but I suppose I wouldn’t have it any other way. Personally, when I’m working on a project and I think I’m nearing the answer, there is close to nothing that’ll make me leave the room. I feel so uplifted when I hit a daily milestone, that I often forget huge progress is still made when I don’t reach a code solution.

<hr />
<p style="text-align:center;"><strong>Pro-Tip For Beginners</strong></p>
<p style="text-align:center;"> <em>Do not bring yourself down as a newcomer to code. In fact, there is probably never an instance where you should. Take the problem at hand and just know it’s solvable— it almost always should be if you are a beginner. For me, I’m moving at such a fast rate, I often lose sight of the micro improvements I’m make daily, but in reality, I’m driving at 80 miles per hour on a 65.</em>
<em>But I’ve learned that nobody cares for complaining and nobody will feel sorry for you. The answer is out there and rest assured, you can find it.</em></p>


<hr />



<hr />
<p style="text-align:center;"><strong>On to Week 5.</strong></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>279</wp:post_id>
  <wp:post_date>2015-07-15 17:49:41</wp:post_date>
  <wp:post_date_gmt>2015-07-15 17:49:41</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>week-3-week-4-summary</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12759645427]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[301]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>iOS Simulator Screen Shot Jul 4, 2015, 9.53.23 AM.ed98b4ad573a498c8ac7da5c73e5d00e</title>
  <link>http://leojkwan.com/2015/07/15/week-3-week-4-summary/ios-simulator-screen-shot-jul-4-2015-9-53-23-am-ed98b4ad573a498c8ac7da5c73e5d00e/</link>
  <pubDate>Mon, 06 Jul 2015 17:49:14 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/ios-simulator-screen-shot-jul-4-2015-9-53-23-am-ed98b4ad573a498c8ac7da5c73e5d00e.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>282</wp:post_id>
  <wp:post_date>2015-07-06 17:49:14</wp:post_date>
  <wp:post_date_gmt>2015-07-06 17:49:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ios-simulator-screen-shot-jul-4-2015-9-53-23-am-ed98b4ad573a498c8ac7da5c73e5d00e</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>279</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/ios-simulator-screen-shot-jul-4-2015-9-53-23-am-ed98b4ad573a498c8ac7da5c73e5d00e.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-07-04 at 10.32.01 AM.69099ad317aa4a8a84e3a9ddaf28d502</title>
  <link>http://leojkwan.com/2015/07/15/week-3-week-4-summary/screen-shot-2015-07-04-at-10-32-01-am-69099ad317aa4a8a84e3a9ddaf28d502/</link>
  <pubDate>Mon, 06 Jul 2015 17:55:12 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-04-at-10-32-01-am-69099ad317aa4a8a84e3a9ddaf28d502.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>285</wp:post_id>
  <wp:post_date>2015-07-06 17:55:12</wp:post_date>
  <wp:post_date_gmt>2015-07-06 17:55:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-07-04-at-10-32-01-am-69099ad317aa4a8a84e3a9ddaf28d502</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>279</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-04-at-10-32-01-am-69099ad317aa4a8a84e3a9ddaf28d502.png</wp:attachment_url>
</item>
<item>
  <title>coreData</title>
  <link>http://leojkwan.com/2015/07/15/week-3-week-4-summary/coredata/</link>
  <pubDate>Sat, 18 Jul 2015 22:40:27 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/coredata.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>299</wp:post_id>
  <wp:post_date>2015-07-18 22:40:27</wp:post_date>
  <wp:post_date_gmt>2015-07-18 22:40:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>coredata</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>279</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/coredata.gif</wp:attachment_url>
</item>
<item>
  <title>coreData</title>
  <link>http://leojkwan.com/2015/07/15/week-3-week-4-summary/coredata-2/</link>
  <pubDate>Sat, 18 Jul 2015 22:47:34 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/coredata.mov</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>300</wp:post_id>
  <wp:post_date>2015-07-18 22:47:34</wp:post_date>
  <wp:post_date_gmt>2015-07-18 22:47:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>coredata-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>279</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/coredata.mov</wp:attachment_url>
</item>
<item>
  <title>coreData</title>
  <link>http://leojkwan.com/2015/07/15/week-3-week-4-summary/coredata-3/</link>
  <pubDate>Sat, 18 Jul 2015 22:48:39 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/coredata1.gif</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>301</wp:post_id>
  <wp:post_date>2015-07-18 22:48:39</wp:post_date>
  <wp:post_date_gmt>2015-07-18 22:48:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>coredata-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>279</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/coredata1.gif</wp:attachment_url>
</item>
<item>
  <title>Incorporating Youtube's Data API in your Xcode project.</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/</link>
  <pubDate>Thu, 23 Jul 2015 14:21:52 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=305</guid>
  <description/>
  <content:encoded><![CDATA[If you ever wanted to integrate youtube search and play capabilities into your iPhone app, you will eventually need to play around with Youtube’s Data API. Depending on the level of interaction you would like to have with a user, you may need to authorize requests with OAuth 2.0. But if you are just interested in searching and playing videos based on a particular query like this post, all you need to do is sign up for an API key on Google’s dev console. With just the free rate limit, you are allowed 5,000,00 requests per day, but as you will soon realize, those API calls can accrue pretty fast with even the most basic requests.

<!--more-->
<strong>Go to Youtube’s Developer Console and request an API Key. </strong>

<strong> <a href="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-31-am-line.png"><img class=" wp-image-311 aligncenter" src="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-31-am-line.png?w=300" alt="Screen Shot 2015-07-23 at 9.13.31 AM + Line" width="971" height="470" /><img class=" wp-image-312 aligncenter" src="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-50-am-line.png?w=300" alt="Screen Shot 2015-07-23 at 9.13.50 AM + Line" width="703" height="581" /></a></strong>

With just the free quota, you get 50 million units/day and 3000 requests/second/user.

<hr />

<strong>Create a new project in Xcode with a single view application</strong>

<strong>Pod Install the <a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a> CocoaPod.</strong>

<img class=" size-medium wp-image-331 alignright" src="https://leokwanblog.files.wordpress.com/2015/07/apnetworking-8d7d5a447f3748c696d0b07fb43728f1.png?w=300" alt="AFNetworking" width="300" height="106" />I used AFNetworking to perform my HTTP requests for youtube’s JSON responses. Just about every app you see in the App store that connects to the internet utilizes this powerful cocoa pod that allow you to make HTTP requests in Objective C. It’s a great alternative to using NSURL Session, which is a slightly more tedious method to speak with the internet.
<strong>Create an APIClient class. </strong>

This client class will have two class methods, one for performing a youtube search, and the other for retrieving a video’s statistics (we’ll be getting total view count info in this demo.)
<p style="text-align:center;"><em>I also like to compartmentalize my class objects because it’s cleaner to read and operate with in the long run of a project. I will also create an API Key class that stores my API keys. That way, if I push my projects to the app store or leave it open source on Github, I can hide my private information from public eye with git ignore, a method in Git that excludes files that you prefer to have untracked.Bad things can happen with an exposed API key.</em></p>


<hr />

<h3 style="text-align:center;"><strong>Your 1st GET request.</strong></h3>
In our first GET request, all we want to do is get back the results in a video search query. The base URL for this standard call is:

<strong><span style="text-decoration:underline;">https://www.googleapis.com/youtube/v3/search</span></strong>
All of the logic will take place in a GET request method. You will need to pass in the query for what you want to search, as will as a completion block that will accept what you get back from Youtube.

This is an example class method I used for the GET Request:

[code language="objc"]


+(void) getVideosWithQuery:(NSString *)query completionBlock:(void (^) (NSDictionary *)) completionBlock;

[/code]

<h5>To search Youtube with a specific query, you need several params:</h5>
1) part: snippet
2) q: query
3) API Key

Within this method, create a dictionary for all the parameters you want to pass in. I my example dictionary, I have 4 keys: “part”, “q”, “order” and “key”. The additional order key is that my video query response will be ordered from highest to lowest view count.

The “**part**” key is technically the only required param for making an API call to Youtube, but since we registered an API Key, we should pass in “**key**as well to guarantee our daily free rate of 5 million requests per day. Of course, the value for this key will be your API Key in string format: like so: @“key”: @“ThisIsMyAPIKeyICopiedAndPastedFromYoutube”.

Here is the method call in full.

[code language="objc"]
 +(void) getVideosWithQuery:(NSString *)query completionBlock:(void (^) (NSDictionary *)) completionBlock {
 NSString *YOUTUBE_SEARCH_URL = @&quot;https://www.googleapis.com/youtube/v3/search&quot;;


NSDictionary *params = @{

 @&quot;part&quot; : @&quot;snippet&quot;,
 @&quot;q&quot;: query,
 @&quot;order&quot;: @&quot;viewCount&quot;,
 @&quot;key&quot; : YOUTUBE_API_KEY};

 AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];

 [manager GET:YOUTUBE_SEARCH_URL parameters:params success:^(NSURLSessionDataTask *task, id responseObject) {
 NSLog(@&quot;%@&quot;, responseObject);
completionBlock(responseObject);
 } failure:^(NSURLSessionDataTask *task, NSError *error) {
 NSLog(@&quot;%@&quot;, error);
 }];

 }
[/code]


<hr />

<h3></h3>
<h3 style="text-align:center;"><strong>Your 2nd GET request.</strong></h3>
Currently, youtube’s Data API is in it’s third version. In the past, one API call would swoop up most of a video searches data and we would be done with it. In V3, you need to make another GET request to get the statistical information for a specific video such as view count. Seriously? Here’s the layout for API call points for Youtube

<a href="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-29-59-am.png"><img class=" wp-image-319 aligncenter" src="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-29-59-am.png?w=300" alt="param quota cost for stats" width="609" height="517" /></a>

If you add it all up, the total amount of requests for one action is tremendous. The first API response with a “snippet” request will cost 2 quota points, but for every video within that search query, I will need to spend an additional 2 points to access its statistical information like view count.

<strong>This is how what the second API request method would look like with AFNetworking.</strong>

[code language="objc"]
+(void) getVideosStatsWithVideoID:(NSString *)videoID completionBlock:(void (^) (NSDictionary *)) completionBlock;
 [/code]

<strong>Notice the difference with the base URLs.</strong>

[code language="objc"]
NSString *const YOUTUBE_SEARCH_URL = @&quot;https://www.googleapis.com/youtube/v3/search&quot;;
NSString *const YOUTUBE_STATS_URL = @&quot;https://www.googleapis.com/youtube/v3/videos&quot;;
[/code]

<blockquote>
<p style="text-align:left;"><em>In the second API call, you need to pass in the specific videoId that you get back in your first GET request and pass it into this second GET request.</em></p>
</blockquote>

<hr />

<h3 style="text-align:center;"><strong>Your first JSON Response.</strong></h3>
Pass your response object into a completion block. If you get a successful request, you will get back a dictionary with a list of items and their snippet details like video name, channel name etc. Depending on what you need and the specific filters you would like in your search query, you can add and modify your params dictionary to suit your needs. Refer to <a href="https://developers.google.com/youtube/v3/docs/search/list" target="_blank">youtube's docs</a> for more info.

Drag in a table view controller into your storyboard. Lets just make sure our API class methods are all set up right and that we are getting back a successful JSON response from youtube. Create a class for your table view controller and import your Youtube API Client into the TVC implementation file.

In your viewDidLoad, call your getVideosWithQuery method:

[code language="objc"]
[YouTubeAPIClient getVideosWithQuery:@&quot;Flatiron School&quot; completionBlock:^(NSDictionary *response) {
 NSLog(@&quot;%@&quot;,response);
 }];
[/code]

<h5><strong>We just want to log the response we get. I passed in “Flatiron School” in my query, and I got back a JSON response like this:</strong></h5>

[code language="objc"]


items = (
{
etag = &quot;\&quot;iDqJ1j7zKs4x3o3ZsFlBOwgWAHU/3AMBW9rCtJUATL28IiCJO4NlsWk\&quot;&quot;;
id = {
kind = &quot;youtube#video&quot;;
videoId = &quot;v3w9BODR-Yg&quot;;
};
kind = &quot;youtube#searchResult&quot;;
snippet = {
channelId = UCedo9harMOgixvNhNB0sEyA;
channelTitle = FlatironSchoolNY;
description = &quot;Visit http://flatironschool.com/kodewithkarlie to learn more! Karlie, model and co-founder of Karlie's Kookies, started learning to code at Flatiron School in 2014.&quot;;
liveBroadcastContent = none;
publishedAt = &quot;2015-04-08T14:29:52.000Z&quot;;
thumbnails = {
default = {
url = &quot;https://i.ytimg.com/vi/v3w9BODR-Yg/default.jpg&quot;;
};
high = {
url = &quot;https://i.ytimg.com/vi/v3w9BODR-Yg/hqdefault.jpg&quot;;
};
medium = {
url = &quot;https://i.ytimg.com/vi/v3w9BODR-Yg/mqdefault.jpg&quot;;
};
};
title = &quot;#KodeWithKarlie&quot;;
};

[/code]

So we’re getting a ton of valuable information in what is considered a “snippet” for Youtube. Notice you get back a video’s URL identifier, the image thumbnail URL, the video title, and the channel name that posted the video. That’s awesome, but all of there details are buried in one big JSON response, or what I see as an array of dictionaries within dictionaries within dictionaries. This calls for some JSON spelunking. We need to somehow take the endpoints we need and bundle it all up—
<h5>Let’s make a separate youtube video class.</h5>
In this class, the video will have several properties, specifically the properties we want displayed in our table view controller.
It should look something like this in your header file:

[code language="objc"]




@property (nonatomic, strong) NSString *titleOfVideo;
@property (nonatomic, strong) NSString *titleOfChannel;
@property (nonatomic, strong) NSString *videoID;
@property (nonatomic, strong) NSString *totalViews;
@property (nonatomic, strong) NSString *thumbnailURL;


[/code]

We will also need a class method that instantiates a Youtube Video object with the values we get back from youtube plugged into the object’s properties. That would look something like this in the implementation file:

[code language="objc"]

+(YoutubeVideo *) videoFromDictionary:(NSDictionary *) videoDictionary {


YoutubeVideo *video = [[YoutubeVideo alloc] init];

video.titleOfVideo = videoDictionary[@&quot;snippet&quot;][@&quot;title&quot;];
video.titleOfChannel = videoDictionary[@&quot;snippet&quot;][@&quot;channelTitle&quot;];
video.videoID = videoDictionary[@&quot;id&quot;][@&quot;videoId&quot;];
video.totalViews = videoDictionary[@&quot;snippet&quot;][@&quot;&quot;];
video.thumbnailURL = videoDictionary[@&quot;snippet&quot;][@&quot;thumbnails&quot;][@&quot;high&quot;][@&quot;url&quot;];


return video;
}


[/code]

<h5><strong>Make an NSMutable Array in your table view controller to capture our video results.</strong></h5>
So we created a separate youtube video class. We need to create a for loop within our GET request’s completion block, where we previously NSLogged our JSON response, to capture and and instantiate youtube video objects based on what we get back from youtube. If you took a close look at what your console logged for the response object from youtube, you will notice that we get back <strong>one</strong> big dictionary with <strong>one</strong> big array, with <strong>many</strong> dictionaries within it. Each of those dictionaries encapsulate one video result from youtube.
<blockquote>Because they are in an array, we can loop through them and pick out what we need to create a youtube video object. Lets make an NSMutableArray outside our method call. Afterwards, call your YoutubeAPIClient class method and plug the response values into a video instance within a for loop.</blockquote>

[code language="objc"]

[YouTubeAPIClient getVideosWithQuery:@&quot;Flatiron School&quot; 

completionBlock:^(NSDictionary *response) { 

for (NSDictionary *video in response[@&quot;items&quot;]) {

 NSLog(@&quot;%@&quot;,response);

 YoutubeVideo *videoAtThisIndex = [YoutubeVideo videoFromDictionary:video]; 

[self.FISVideoResultsArray addObject:videoAtThisIndex];}

[/code]


<hr />

<h3 style="text-align:center;">In your cellForRowAtIndexPath, you will need to do <strong>three</strong> things.</h3>
<h5>1) Instantiate your custom table view cell with a reuse ID name. Make sure you also set it in your storyboard.</h5>

[code language="objc"]

 YoutubeTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@&quot;youtubeReuseCell&quot; forIndexPath:indexPath];
[/code]

<h5>2) Make instances of your youtube video object and set the videos to the items in your mutable array at their indexPath.row count.</h5>

[code language="objc"]
 YoutubeVideo *videoAtThisRow = self.FISVideoResultsArray[indexPath.row];
[/code]

<em>This ensures each cell in your table view corresponds to the exact order that your mutable array model displays.</em>
<h5>3) Set the UILabels of your custom class to the properties you created for your Youtube object</h5>

[code language="objc"]
cell.videoTitleLabel.text =videoAtThisRow.titleOfVideo;
cell.channelNameLabel.text = videoAtThisRow.titleOfChannel;

[/code]

<a href="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-22-at-3-07-02-pm-2-f17236ad3cf1482089eced8a2494df1e.png"><img class="alignnone wp-image-389" src="https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-22-at-3-07-02-pm-2-f17236ad3cf1482089eced8a2494df1e.png?w=300" alt="import properties" width="828" height="389" /></a>

It’s a bit tricky with the thumbnail URL property because assuming you set a UIImageView in your custom table view cell, you will need to create a NSData instance with the imageURL, and then you’ll have to create a UIImage with that NSData. With the UIImage, now you can set the image to the cell property.

[code language="objc"]
NSURL* imageURL = [NSURL URLWithString:videoAtThisRow.thumbnailURL];
NSData *imageData = [NSData dataWithContentsOfURL:imageURL];
UIImage *image = [UIImage imageWithData:imageData];

cell.videoThumbnail.image = image;
[/code]


<hr />

<h4><strong>Make a second API request within the first request’s completion block.</strong></h4>
Within our first completion block, one of the properties we are setting into a newly made youtube video objects is the videoId. In my class file, I set the property as videoID. That’s going to be the argument our second API class method needs to get back statistical information. We will need to create another for loop, but since we’ve already dumped all the information we needed from the response object into a mutable array, we just have to loop over the array and pluck out each object’s videoId.

[code language="objc"]
for(ATRYoutubeVideo *videoAtThisIndex in self.videoResultsWithQuery) {&lt;/pre&gt;

[ATRYouTubeAPIClient getVideosStatsWithVideoID:videoAtThisIndex.videoID completionBlock:^(NSDictionary *response) {
NSLog(@&quot;%@&quot;, response);

NSString *viewCountForThisVideo = response[@&quot;items&quot;][0][@&quot;statistics&quot;][@&quot;viewCount&quot;]; // The array we want will always be 0 because the completion block will always return just one

videoAtThisIndex.totalViews = viewCountForThisVideo;

[/code]

Before we end leave this second completion block (which is in our first class method’s completion block), we need to reload our table view data on the main thread, ensuring that the table view will reload once the API response is finished. Otherwise, our table view will load in the storyboard before our API GET request is finished.
<h5>Add this into the end of your second class method’s completion block:</h5>

[code language="objc"]
[[NSOperationQueue mainQueue] addOperationWithBlock:^{&lt;/pre&gt;

[self.youtubeResultsTableView reloadData];
}];

[/code]

Assuming you passed in the Flatiron School like I did into your search query, you should get back something like this in your tableview controller.

[wpvideo fgufQsso w= 300]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>305</wp:post_id>
  <wp:post_date>2015-07-23 14:21:52</wp:post_date>
  <wp:post_date_gmt>2015-07-23 14:21:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>youtubes-data-api</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[394]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[13010593950]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_626eb42ce929e21505949d7009d8c54b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4fc9bf369d1e64f2504c359cd406f4a2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7faf2493326bdd7a3a42d084e5aa6f14</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>youtubeAPI</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/youtubeapi/</link>
  <pubDate>Thu, 23 Jul 2015 02:38:22 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/youtubeapi.mov</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>307</wp:post_id>
  <wp:post_date>2015-07-23 02:38:22</wp:post_date>
  <wp:post_date_gmt>2015-07-23 02:38:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>youtubeapi</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/youtubeapi.mov</wp:attachment_url>
</item>
<item>
  <title>Youtube</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/youtube/</link>
  <pubDate>Thu, 23 Jul 2015 13:09:21 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/youtube.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>309</wp:post_id>
  <wp:post_date>2015-07-23 13:09:21</wp:post_date>
  <wp:post_date_gmt>2015-07-23 13:09:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>youtube</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/youtube.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-07-23 at 9.13.31 AM + Line</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/screen-shot-2015-07-23-at-9-13-31-am-line/</link>
  <pubDate>Thu, 23 Jul 2015 13:17:02 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-31-am-line.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>311</wp:post_id>
  <wp:post_date>2015-07-23 13:17:02</wp:post_date>
  <wp:post_date_gmt>2015-07-23 13:17:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-07-23-at-9-13-31-am-line</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-31-am-line.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-07-23 at 9.13.50 AM + Line</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/screen-shot-2015-07-23-at-9-13-50-am-line/</link>
  <pubDate>Thu, 23 Jul 2015 13:18:43 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-50-am-line.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>312</wp:post_id>
  <wp:post_date>2015-07-23 13:18:43</wp:post_date>
  <wp:post_date_gmt>2015-07-23 13:18:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-07-23-at-9-13-50-am-line</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-13-50-am-line.png</wp:attachment_url>
</item>
<item>
  <title>param quota cost for stats</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/screen-shot-2015-07-23-at-9-29-59-am/</link>
  <pubDate>Thu, 23 Jul 2015 13:30:22 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-29-59-am.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>319</wp:post_id>
  <wp:post_date>2015-07-23 13:30:22</wp:post_date>
  <wp:post_date_gmt>2015-07-23 13:30:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-07-23-at-9-29-59-am</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-23-at-9-29-59-am.png</wp:attachment_url>
</item>
<item>
  <title>AFNetworking</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/apnetworking-8d7d5a447f3748c696d0b07fb43728f1/</link>
  <pubDate>Thu, 23 Jul 2015 14:24:51 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/apnetworking-8d7d5a447f3748c696d0b07fb43728f1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>331</wp:post_id>
  <wp:post_date>2015-07-23 14:24:51</wp:post_date>
  <wp:post_date_gmt>2015-07-23 14:24:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>apnetworking-8d7d5a447f3748c696d0b07fb43728f1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/apnetworking-8d7d5a447f3748c696d0b07fb43728f1.png</wp:attachment_url>
</item>
<item>
  <title>import properties</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/screen-shot-2015-07-22-at-3-07-02-pm-2-f17236ad3cf1482089eced8a2494df1e/</link>
  <pubDate>Sat, 25 Jul 2015 15:05:59 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-22-at-3-07-02-pm-2-f17236ad3cf1482089eced8a2494df1e.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>389</wp:post_id>
  <wp:post_date>2015-07-25 15:05:59</wp:post_date>
  <wp:post_date_gmt>2015-07-25 15:05:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-07-22-at-3-07-02-pm-2-f17236ad3cf1482089eced8a2494df1e</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/screen-shot-2015-07-22-at-3-07-02-pm-2-f17236ad3cf1482089eced8a2494df1e.png</wp:attachment_url>
</item>
<item>
  <title>youtube</title>
  <link>http://leojkwan.com/2015/07/23/youtubes-data-api/youtube-2/</link>
  <pubDate>Sat, 25 Jul 2015 16:23:55 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/07/youtube.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>394</wp:post_id>
  <wp:post_date>2015-07-25 16:23:55</wp:post_date>
  <wp:post_date_gmt>2015-07-25 16:23:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>youtube-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>305</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/07/youtube-e1437841449863.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:1191;s:6:"height";i:670;s:4:"file";s:11:"youtube.jpg";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://leojkwan.com/?p=398</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=398</guid>
  <description/>
  <content:encoded><![CDATA[<h4><blockquote>
Our perception of stress, and therefore our response to it, is an ever-changing thing that depends a great deal on the circumstances and settings in which we find ourselves. It depends on previous experience and knowledge, as well as on the actual event that has occurred. And it depends on memory, too.</h4>
</blockquote>
—Esther Sternberg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>398</wp:post_id>
  <wp:post_date>2015-07-26 14:39:13</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="asides"><![CDATA[Asides]]></category>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to utilize Nibs/ Xibs for reusable views in Objective-C</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/</link>
  <pubDate>Fri, 07 Aug 2015 14:21:09 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=413</guid>
  <description/>
  <content:encoded><![CDATA[For my group's final project here at The Flatiron School, we're making an app that connects travelers with locals who offer personalized, authentic tours of their city. You can think of it like an AirBnB app in that our app serves as a marketplace for users to present and book tours.

<!--more-->

We created a low fidelity wireframe sketch of our app and delegated its separate workflows amongst the four of us. Since I'm covering the user profile aspect of our app, I often need to reuse views like profile image, or a user info snippet. Because of that, I've been implementing nibs quite extensively throughout our app's overall design flow.

<a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-10-07-41-am.png"><img class=" wp-image-423 aligncenter" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-10-07-41-am.png?w=300" alt="Screen Shot 2015-08-07 at 10.07.41 AM" width="497" height="170" /></a>

At the Flatiron School, we started the program with storyboards. It was my bread and butter, and I didn't want to leave it, solely because I had no idea how else I'd something in my view controller. It's rare to see iOS tutorials these days that do not go straight to storyboard, rather than working programmatically or with nibs. And why would they? The Storyboard GUI is convenient to use and becoming more powerful each and every Xcode update.

But the storyboard can get cramped and trying to figure out how all your layout constraints are properly set can become a nightmare real quick.
----
<p class="intro" style="text-align:left;">The Power of Nibs</p>
That's where nibs come in. You separate a single view into it's own class and nib file (basically a storyboard) and work from there.

The caveat of displaying nibs on a view controller is that it doesn't solve the constraints that would lay in storyboard. Getting your nibs to display exactly the way you layered it from your nib view file can be just as difficult without additional help.
<p class="intro" style="text-align:left;">The Power of Masonry</p>
NSLayout Constraints- no thanks. VFL, maybe. Masonry, absolutely.

Masonry makes setting constraints a whole lot easier. You can find the CocoaPod <a href="https://github.com/SnapKit/Masonry">here</a>. Nibs and Masonry work like a charm together. Better yet, masonry works well with just about any view that needs a constraint, nib on no nib.

The example I will show is a generic profile view controller I made by programmatically stacking nibs together through masonry.

<strong>Step 1. Get your xib to show on your controller.</strong>
Before you try and connect your data models to your nib file, just try and get the xib to properly appear in your desired view. The last thing you want to do is try and solve a poorly set nib view and incorrect data passing simultaneously. At that point, it becomes unclear what the real problem is.

<strong>Step 2. Create a xib file and its corresponding view files.</strong>
You need three files. A xib, and a UIView subclass .h and .m.
Make sure they are all the same name. Well it doesn't really matter but you'll see later how keeping a unified name for all three files lead to reusable code snippets. And it looks cleaner. Just do it.

<a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-29-am-f840be4c10274391be9d03125bfb2cc4.png"><img class="aligncenter wp-image-416" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-29-am-f840be4c10274391be9d03125bfb2cc4.png?w=660" alt="Screen Shot 2015-08-07 at 8.04.29 AM.f840be4c10274391be9d03125bfb2cc4" width="427" height="250" /></a> <a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-40-am-045e5f706c494300a78bc0f7a59f7470.png">
</a> <a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-51-am-f7585250eabe441c84805944f5ba4a8d.png"><img class="aligncenter wp-image-419" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-51-am-f7585250eabe441c84805944f5ba4a8d.png?w=300" alt="Screen Shot 2015-08-07 at 8.04.51 AM.f7585250eabe441c84805944f5ba4a8d" width="430" height="250" /></a> <a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-58-am-4081624926a34972b1463375a3a2c13c.png"><img class="aligncenter wp-image-418" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-58-am-4081624926a34972b1463375a3a2c13c.png?w=660" alt="Screen Shot 2015-08-07 at 8.04.58 AM.4081624926a34972b1463375a3a2c13c" width="425" height="250" /></a>
<h5>In your nib file...</h5>
1) Drag a UIView onto storyboard
2) Set the File Owner to the UIView subclass you just created, ideally with the same name as your nib
3) Set 3 methods into your view.

[code language="objc"]
-(id)initWithCoder:(NSCoder *)aDecoder
 {
 self = [super initWithCoder:aDecoder];
 if(self) {
[self commonInit];
}

return self;
}

-(instancetype)initWithFrame:(CGRect)frame
{
self = [super initWithFrame:frame];
if(self) {
[self commonInit];
}

return self;
}

-(void)commonInit
{
[[NSBundle mainBundle] loadNibNamed:NSStringFromClass(self.class)
owner:self
options:nil];

[self addSubview:self.userSnippetContentView];
}
[/code]

initWithFrame and initWithCoder are standard methods that you must implement. The commonInit method can be called anything you'd like. I called it that because in this method, you are stating, "Load this nib which happens to have my name [NSStringFromClass(self.class)], AND I declare that I am owner of this nib.

This code snippet only works if your files are named the same. If not, you will need to hardcode the name of your nib file at "loadNibNamed". With this design, you can reuse the majority of this .m file on similar xib files you project has. Pretty neat.

<strong>Instantiate nib into your view controller</strong>

[code language="objc"]
 TRVUserSnippetView *snippetView = [[TRVUserSnippetView alloc] init];
 [self.containerView addSubview:snippetView];
[/code]

add the view into whatever view you want to display in on.

--------

<strong>Here comes Masonry.</strong>

Pod install Masonry and import the .h file.

[code language="objc"]
#import &lt;Masonry.h&gt;
[/code]

Masonry is pretty intuitive. You call a block method called make constraints and set the top, left, and right edges to your superview.

[code language="objc"]

[snippetView mas_makeConstraints:^(MASConstraintMaker *make) {
make.top.equalTo(self.containerView.mas_top);
make.left.and.right.equalTo(self.containerView);
}];
[/code]

<a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-29-04-am-b0c3c92b983f4d6c87c0a678f50a158a.png"><img class="aligncenter wp-image-421 size-full" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-29-04-am-b0c3c92b983f4d6c87c0a678f50a158a.png" alt="Screen Shot 2015-08-07 at 9.29.04 AM.b0c3c92b983f4d6c87c0a678f50a158a" width="374" height="420" /></a>
Boom. Awesome.

<strong>pass in the our user data model into the nib's text label.</strong>

Our app has a user bio class with all the properties we want to display on our xib.

**Create a property of your class type and override the setter method**
In our project, we have a class called TRVUser that contains all relevant info about a logged in user.
We want to override the setter method for TRVUser so that when we set a specific user to our nib view, the data immediately gets passed into your nib's text labels, images, etc.
<strong>TRVUserSnippetView.h file</strong>

[code language="objc"]
@property (nonatomic, strong) TRVUser *userForThisSnippetView;
[/code]

<strong>TRVUserSnippetView.m file</strong>

[code language="objc"]

-(void)setUserForThisSnippetView:(TRVUser *)userForThisSnippetView {

_userForThisSnippetView = userForThisSnippetView;

self.firstNameLabel.text = userForThisSnippetView.userBio.firstName;
self.lastNameLabel.text = userForThisSnippetView.userBio.lastName;
self.oneLinerLabel.text = userForThisSnippetView.userBio.userTagline;

}

[/code]

We traverse through our user's "userbio" property, which contains the info we want like name, bio description etc.

Run it again and now you will see:

<a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-28-33-am.png"><img class="aligncenter wp-image-422 size-full" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-28-33-am.png" alt="Screen Shot 2015-08-07 at 9.28.33 AM" width="373" height="375" /></a>
Repeat this process a couple more times with Masonry. This is what we made.

<a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-22-12-am.png"><img class="aligncenter wp-image-427 " src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-22-12-am.png?w=181" alt="Screen Shot 2015-08-07 at 7.22.12 AM" width="367" height="600" /></a>
There constraints were made possible through masonry. The two main points to construct this "stack view" is to first append the top of each subsequent view to the last view's bottom constraint, then set the entire content's view bottom constraint to the last item's bottom constraint.

<hr />

<h3 style="text-align:center;"><strong>Common mistakes I ran into working with masonry.</strong></h3>
1) add xib as subview of content view... THEN SET your Masonry constraints.
2) add root view to self in your nib .m file
This one is hard to grasp because the content view you dragged in appears to be at the top of your view hierarchy, at least in the document outline. But you still need to add this view as a subview of self. Just do it.
<p style="text-align:left;">3) Make edges equal to 0.
4) Color your xib backgrounds &amp; use the debug view hierarchy.</p>
<a href="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-23-44-am-d1017b424ff146bc8e2c23948e066dca.png"><img class="alignnone wp-image-415" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-23-44-am-d1017b424ff146bc8e2c23948e066dca.png?w=300" alt="Screen Shot 2015-08-07 at 7.23.44 AM.d1017b424ff146bc8e2c23948e066dca" width="677" height="558" /></a>

Using the view debugger makes me feel like a badass detective analyzing a homicide case. Use is. The debugger is just so helpful in solving view hierarchical problems. Do not be fooled if you see nothing when your view controller compiles. Color your xibs and debug that view, because it may be very possible that your constraints are just wrong.

<hr />
<p class="intro" style="text-align:center;">Your turn!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>413</wp:post_id>
  <wp:post_date>2015-08-07 14:21:09</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:21:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>implementing-nibsxibs-with-masonry-cocoapod</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[13497337602]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[464]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 7.23.44 AM.d1017b424ff146bc8e2c23948e066dca</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-7-23-44-am-d1017b424ff146bc8e2c23948e066dca/</link>
  <pubDate>Fri, 07 Aug 2015 14:06:50 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-23-44-am-d1017b424ff146bc8e2c23948e066dca.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>415</wp:post_id>
  <wp:post_date>2015-08-07 14:06:50</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:06:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-7-23-44-am-d1017b424ff146bc8e2c23948e066dca</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-23-44-am-d1017b424ff146bc8e2c23948e066dca.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 8.04.29 AM.f840be4c10274391be9d03125bfb2cc4</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-8-04-29-am-f840be4c10274391be9d03125bfb2cc4/</link>
  <pubDate>Fri, 07 Aug 2015 14:06:52 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-29-am-f840be4c10274391be9d03125bfb2cc4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>416</wp:post_id>
  <wp:post_date>2015-08-07 14:06:52</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:06:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-8-04-29-am-f840be4c10274391be9d03125bfb2cc4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-29-am-f840be4c10274391be9d03125bfb2cc4.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 8.04.40 AM.045e5f706c494300a78bc0f7a59f7470</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-8-04-40-am-045e5f706c494300a78bc0f7a59f7470/</link>
  <pubDate>Fri, 07 Aug 2015 14:06:54 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-40-am-045e5f706c494300a78bc0f7a59f7470.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>417</wp:post_id>
  <wp:post_date>2015-08-07 14:06:54</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:06:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-8-04-40-am-045e5f706c494300a78bc0f7a59f7470</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-40-am-045e5f706c494300a78bc0f7a59f7470.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 8.04.58 AM.4081624926a34972b1463375a3a2c13c</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-8-04-58-am-4081624926a34972b1463375a3a2c13c/</link>
  <pubDate>Fri, 07 Aug 2015 14:06:56 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-58-am-4081624926a34972b1463375a3a2c13c.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>418</wp:post_id>
  <wp:post_date>2015-08-07 14:06:56</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:06:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-8-04-58-am-4081624926a34972b1463375a3a2c13c</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-58-am-4081624926a34972b1463375a3a2c13c.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 8.04.51 AM.f7585250eabe441c84805944f5ba4a8d</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-8-04-51-am-f7585250eabe441c84805944f5ba4a8d/</link>
  <pubDate>Fri, 07 Aug 2015 14:06:59 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-51-am-f7585250eabe441c84805944f5ba4a8d.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>419</wp:post_id>
  <wp:post_date>2015-08-07 14:06:59</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:06:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-8-04-51-am-f7585250eabe441c84805944f5ba4a8d</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-8-04-51-am-f7585250eabe441c84805944f5ba4a8d.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 9.09.23 AM.099a49b0b56e40b099396de30e78462b</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-9-09-23-am-099a49b0b56e40b099396de30e78462b/</link>
  <pubDate>Fri, 07 Aug 2015 14:07:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-09-23-am-099a49b0b56e40b099396de30e78462b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>420</wp:post_id>
  <wp:post_date>2015-08-07 14:07:00</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:07:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-9-09-23-am-099a49b0b56e40b099396de30e78462b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-09-23-am-099a49b0b56e40b099396de30e78462b.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 9.29.04 AM.b0c3c92b983f4d6c87c0a678f50a158a</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-9-29-04-am-b0c3c92b983f4d6c87c0a678f50a158a/</link>
  <pubDate>Fri, 07 Aug 2015 14:07:02 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-29-04-am-b0c3c92b983f4d6c87c0a678f50a158a.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>421</wp:post_id>
  <wp:post_date>2015-08-07 14:07:02</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:07:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-9-29-04-am-b0c3c92b983f4d6c87c0a678f50a158a</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-29-04-am-b0c3c92b983f4d6c87c0a678f50a158a.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 9.28.33 AM</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-9-28-33-am/</link>
  <pubDate>Fri, 07 Aug 2015 14:07:07 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-28-33-am.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>422</wp:post_id>
  <wp:post_date>2015-08-07 14:07:07</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:07:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-9-28-33-am</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-9-28-33-am.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 10.07.41 AM</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-10-07-41-am/</link>
  <pubDate>Fri, 07 Aug 2015 14:07:53 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-10-07-41-am.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>423</wp:post_id>
  <wp:post_date>2015-08-07 14:07:53</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:07:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-10-07-41-am</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-10-07-41-am.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-08-07 at 7.22.12 AM</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/screen-shot-2015-08-07-at-7-22-12-am/</link>
  <pubDate>Fri, 07 Aug 2015 14:16:19 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-22-12-am.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>427</wp:post_id>
  <wp:post_date>2015-08-07 14:16:19</wp:post_date>
  <wp:post_date_gmt>2015-08-07 14:16:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-07-at-7-22-12-am</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-07-at-7-22-12-am.png</wp:attachment_url>
</item>
<item>
  <title>team</title>
  <link>http://leojkwan.com/2015/08/07/implementing-nibsxibs-with-masonry-cocoapod/team/</link>
  <pubDate>Fri, 07 Aug 2015 15:20:12 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/team.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>464</wp:post_id>
  <wp:post_date>2015-08-07 15:20:12</wp:post_date>
  <wp:post_date_gmt>2015-08-07 15:20:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>team</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>413</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/team.jpg</wp:attachment_url>
</item>
<item>
  <title>Weeks 5 &amp; 6 at The Flatiron School.</title>
  <link>http://leojkwan.com/2015/07/19/weeks-5-6-at-the-flatiron-school/</link>
  <pubDate>Sun, 19 Jul 2015 16:43:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=467</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 5</span></h2>
<p class="intro" style="text-align:center;">Auto Layout</p>

<h5><span style="text-decoration:underline;">Wrapping Up Core Data</span></h5>
We wrapped up our last lecture on core data this morning, and even though the everything dealing with core data seemed convoluted, it eventually became pretty straightforward. According to our main instructor Tim, we primarily use APIs and cloud services to manage our services. There is also <a href="http://www.parse.com">Parse</a>, a backend database solution for mobile app developers who don’t can’t/don’t want to deal with the backend side of things. On top of that, they recently came out with a new local database feature for iOS, meaning you can save data locally until you have a network connection, which then syncs your files with Parse’s server. Makes you think when we’d ever have the need for Core Data.<!--more-->
<h5><span style="text-decoration:underline;">Auto Layout</span></h5>
We are learning how to apply rules and constraints in our frames the hard way first. Finished a lab that incorporated this mundane way of adding constraints. You had to add constraints to each side an object in relation to the said object’s nearest border. It was tough but no complaints. We need to understand the tried and past methods to appreciate what we often take for granted now.
<h5><span style="text-decoration:underline;">Moronic Mondays</span></h5>
Now, we don’t always pick things up on the first shot— and often times, the concepts we forget or still have yet to grasp might be embarrassingly simple. The instructors are kindly aware of that and subsequently, we have this segment every Monday morning called “Moronic Mondays”, where we read anonymously submitted questions about anything and quickly answer them.
<h5><span style="text-decoration:underline;">Pace</span></h5>
We are learning how to apply rules and constraints in our frames the hard way first. Finished a lab that incorporated this mundane way of adding constraints. You had to add constraints to each side an object in relation to the said object’s nearest border. It was tough but no complaints. We need to understand the tried and past methods to appreciate what we often take for granted now.
The pace of our class is beginning to accelerate past what our curriculum is currently on. And it’s no surprise.We have students that come from all walks of life, and it’s natural to gravitate towards what you are passionate about and connect your interests with iOS development. In addition, the ‘Flatiron Presents’ presentations add on to the pressure of delivering something fresh and exciting for our classmates and instructors. It’s beginning to get a little out of hand, and our main instructor had to remind us of the main reason we are here at The Flatiron School— and that is how to code as a professional prepared for almost task while applying best practices.

Yes, we all have high and distinct ambitions to make our personal projects and ideas a reality— and that’s why we got accepted in the first place; we all demonstrated a relentless drive to make ideas real. But the fact of the matter is, we can’t create anything near production grade application if we lack the necessary skill set that competent iOS developer possess. I think our ambitions and personal projects can fire us up anytime- anywhere; when we are truly inspired by something, our inclinations will make us work. But regarding core foundation of object oriented programming and objective-c best practices, it’s something that we, as iOS engineers, simply cannot avoid- and I think part of what we pay for these coding camps is the supervision of instructor to ensure that we learn the right— and often times, mundane things.

Despite these reservations to avoid doing whatever you please, I look forward to when I am competent enough to create a production grade app with other.
<h5><span style="text-decoration:underline;">Basic Animations</span></h5>
Our main lecture today was about basic animations. You know, the very thing that draw the millions of users to download the programs we make daily? Anytime you see an object zoom, ease, bounce in, out or around your iPhone screen— yeah those are animations. Of course, for high level graphical games, developers use other tools such as SpriteKit or Quartz Core, but that’s way out of our class’s scope of content.
<h5><span style="text-decoration:underline;">Standups</span></h5>
Last week, Tim announced that starting every Friday from here on out, we’ll only have lecture once in the morning and afterwards, we are free to work on whatever we want. The instructors want to introduce the idea of standup meetings, where at the end of the day, each student will quickly speak to an instructor about what progress we made that afternoon. Since tomorrow is Fourth of July observation and lecture is cancelled, we began the standup today.
It’s hard to imagine how I now can sit in front of a computer for 14 straight hours, but it happens. As the summer days fly by, the pressure in coding quality begins to escalate because we’re improving at such a fast rate.
<h5><span style="text-decoration:underline;">Brohort</span></h5>
There was one point where making blackjack games seemed exhilarating solely for the reason that we made it. But as you can imagine, our desire to make full-fledged apps is becoming more and more apparent every week. The guys in our class really push each other to work at our best. When I say guys, every student in our cohort is male—yeah. There were apparently 3-4 girls in our original roster, but for some reason, the female count dwindled to zero after a couple drops, deferrals, and medical conditions. It has to be a coincidence because both Ruby cohorts have a significant ratio of women.

Anyway, That’s it for Week 5. We ended it with the closing of Core Data, the introduction of Animations, and the long-winded series of auto layout’s evolution in iOS Development.
<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 6</span></h2>
<p class="intro" style="text-align:center;">More Animations and Gestures</p>
Gestures in iOS are the forgotten features that define what the iPhone is. We all know the standard gestures like panning, scrolling tapping, and swiping, but as of iOS 7, new gestures like edge swipe add so much more functionality to iPhone Development.
<h5><span style="text-decoration:underline;">Blocks and the Internet</span></h5>
Blocks are the biggest challenge we will face this course. It doesn’t look easy but I can do it. My focus is somewhat thrown off because I'm next to go for Flatiron Presents; I feel pretty satisfied with how my app project turned out after three weeks ago, and I'm excited to show it to others.

Working with API calls and HTTP requests through the implementation of blocks is by far the most challenging obstacle I’ve had to face here at Flatiron. So many weird things can happen, and you never know if it’s your fault or not. Even our main instructor Tim will occasionally run into problems during lecture, though it’s still pretty epic watching a person who is so well versed in iOS programming debug and just Google things. As silly as it sounds, it is a powerful skill, when you see it, you’ll believe it.
<h5><span style="text-decoration:underline;">Improvisaton</span></h5>
We had an improvisation class today and it was surprisingly really fun and meaningful for personal development. The Flatiron School plans workshops for us every week and I would have never expected that improvisation would be the most helpful. To be fair, the quality of workshops is really dependent on its instructor, and Andrew, our improv mentor, was fantastic.

Andrew took us through a series of seemingly non-related social exercises, which eventually tied back to interpersonal skills and values we often forget- like listening. Andrew also claimed that he was an introverted nerd deep down, but he sure didn’t act like it. He spoke with confidence and true sincerity, almost like he was once in our shoes– budding programmers who possessed more computable skills than interpersonal.

Something I personally need to be more aware of is conversational empathy —that is, the ability to fully listen to what someone is saying, allowing them to finish his or her thought before considering my response. Seems like the obvious thing to do, but often times, I catch myself rehearsing a set of responses and sentences carved from previous conversations. That sounds like a robot... I don't want to be a robot.
<h5><span style="text-decoration:underline;">Finishing Muse</span></h5>
Halftime. Week 7 is coming and it’s about to come full force more views, specifically scroll views. I am almost done preparing for my Flatiron Presents presentation. I just need to create the slides and refactor my spaghetti code so I myself can actually understand what the hell I wrote.
<p style="text-align:center;"><strong>On to Week 7.</strong></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>467</wp:post_id>
  <wp:post_date>2015-07-19 16:43:00</wp:post_date>
  <wp:post_date_gmt>2015-07-19 16:43:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>weeks-5-6-at-the-flatiron-school</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[13894567716]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[481]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>autolayout</title>
  <link>http://leojkwan.com/2015/07/19/weeks-5-6-at-the-flatiron-school/screen-shot-2015-08-19-at-4-43-54-pm/</link>
  <pubDate>Wed, 19 Aug 2015 20:44:36 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-19-at-4-43-54-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>480</wp:post_id>
  <wp:post_date>2015-08-19 20:44:36</wp:post_date>
  <wp:post_date_gmt>2015-08-19 20:44:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-19-at-4-43-54-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>467</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-19-at-4-43-54-pm.png</wp:attachment_url>
</item>
<item>
  <title>autolayout</title>
  <link>http://leojkwan.com/2015/07/19/weeks-5-6-at-the-flatiron-school/screen-shot-2015-08-19-at-4-45-34-pm/</link>
  <pubDate>Wed, 19 Aug 2015 20:46:07 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-19-at-4-45-34-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>481</wp:post_id>
  <wp:post_date>2015-08-19 20:46:07</wp:post_date>
  <wp:post_date_gmt>2015-08-19 20:46:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-19-at-4-45-34-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>467</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-19-at-4-45-34-pm.png</wp:attachment_url>
</item>
<item>
  <title>Week 7 &amp; 8 at Flatiron</title>
  <link>http://leojkwan.com/2015/07/26/week-7-8-at-flatiron/</link>
  <pubDate>Sun, 26 Jul 2015 22:04:48 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=483</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 7</span></h2>
<p class="intro" style="text-align:center;">Presenting Muse at Flatiron Presents</p>
Finally finished my part in Flatiron Presents. Every Tuesday here at Flatiron School, 3-4 pairs (2 web, 2 mobile) of students present an app/ feature that they have collaborated on. My partner unfortunately dropped from the program around Week 4, but I tried making the most out of the last 2 weeks and made a working app that I feel proud about.

I made a journaling app that allows users to fully capture a moment by pinning their currently playing song to a journal entry for future playback. The frameworks I used to make this app work include MPMediaQuery, MPMusicPlayerController, and Parse as a backend solution for saving entries and music playlists.
<!--more-->

I attached below the keynote and demo video that I used for '<a href="http://www.meetup.com/Flatiron-School-Presents/">Flatiron Presents</a>'. Check it out!

[googleapps domain="docs" dir="presentation/d/1iy_VGFHPZO2uPbUl6-4h6NG3gdxcjTqGe0asBpD5n34/embed" query="start=false&amp;loop=false&amp;delayms=3000" width="683" height="541" /]
<p style="text-align:center;"><code>[wpvideo JWNQPndT w=360]</code></p>
<p style="text-align:left;"> Looking at the slides I prepared post-presentation, I am impressed with how much I've learned in just 6 weeks, and I am equally humbled to learn how complex a 'simple app' could become. I’m starting to believe there is no such thing as a good simple app. Well ... there is <a href="https://itunes.apple.com/us/app/l-train/id793243489?mt=8&amp;ign-mpt=uo%3D4">this</a>.</p>


<hr />

<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 8</span></h2>
<p class="intro" style="text-align:center;">Slumping</p>

<h5>Week 8 was a tough one.</h5>
The week was mostly unproductive and it was mostly on me. I must have been burning out but I started the week off mentally unprepared. It sucks because a day wasted in a sped up educational environment like Flatiron School is very costly in the literal sense. 15k for 12 weeks. What's that each day?

It wasn’t a very motivating week either. We are approaching project mode, and it’s obvious that the labs assigned this week aren’t as important as the concepts we covered over the last 6 weeks.

It’s ironic that I am completely out of sync this week because I've been looking forward to learning about UI scroll views, and it was set for this week. I think I almost knocked out that lecture because I was so tired. I don’t know what hit me, but I’m making it a priority to get it down over the weekend.
<h5>Thursday Afternoon</h5>
Tim announced who we will work with for our final project this afternoon.

We are the first cohort in Flatiron's school that did not partner with an outside company for our final project. Instead, we're randomly broken up into teams of 4 to make our own app. Our team will come up with three ideas we can collectively find interesting and worthwhile, and our instructors select the project they feel is challenging enough for a 3-week span.

I am very happy with the teams that were assembled. We have a strong group because I believe everyone on the team works well collaboratively.

We decided that our main task manager will be WorkFlowy; our means of communication over anything project related will be over Slack. I’ve use Workflowy regularly and I think it’s terrific for small group projects. Besides the cool transitions between task lists, the app is pretty simple, and you can do so much with the blank slate platform they provide. The team was on board so we’re running with it.

No time to fall behind next week— we're officially in project mode. I won't have as much time to blog for the next 3 weeks, but I'll follow up on how our final project ends up. It'll be good.
<h4 style="text-align:center;">On to Week 9</h4>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>483</wp:post_id>
  <wp:post_date>2015-07-26 22:04:48</wp:post_date>
  <wp:post_date_gmt>2015-07-26 22:04:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>week-7-8-at-flatiron</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[13896671325]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_36f670c2745d2edca8a7a44a84b2f186</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[524]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_943fafc68deef1d8d8118551cb44bb86</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>preview</title>
  <link>http://leojkwan.com/2015/07/26/week-7-8-at-flatiron/preview/</link>
  <pubDate>Wed, 19 Aug 2015 21:08:12 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/preview.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>524</wp:post_id>
  <wp:post_date>2015-08-19 21:08:12</wp:post_date>
  <wp:post_date_gmt>2015-08-19 21:08:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>preview</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>483</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/preview.jpg</wp:attachment_url>
</item>
<item>
  <title>Muse App Demo</title>
  <link>http://leojkwan.com/2015/07/26/week-7-8-at-flatiron/muse-final-demo/</link>
  <pubDate>Wed, 19 Aug 2015 21:18:01 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/muse-final-demo.mov</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[This was my Flatiron Presents App]]></excerpt:encoded>
  <wp:post_id>525</wp:post_id>
  <wp:post_date>2015-08-19 21:18:01</wp:post_date>
  <wp:post_date_gmt>2015-08-19 21:18:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>muse-final-demo</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>483</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/muse-final-demo.mov</wp:attachment_url>
</item>
<item>
  <title>Week 9 &amp; 10 at Flatiron School.</title>
  <link>http://leojkwan.com/2015/08/10/week-9-10-at-flatiron-school/</link>
  <pubDate>Mon, 10 Aug 2015 13:13:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=549</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;"><span style="text-decoration:underline;">Week 9</span></h2>
<p class="intro" style="text-align:center;">Traveler App</p>
<span style="line-height:1.5;">Week 9 is the start of project mode at the Flatiron School, and that entails developing an app of choice for 3 straight weeks with 3 other classmates. We sort of had a choice with what we are going to make; the deal is each team submits three ideas to our instructors so that they get the final word on what project to pursue. They, of course, have a better handle as to what work is viable and challenging enough for our 3 weeks time.</span>
<!--more-->

We just submitted our ideas to our instructors, and they are currently deciding which idea best fits our time and effort. The process was enjoyable since they had each team pitch its ideas to all 5 instructors Shark Tank style- that was funny. We came up with an idea to reinvent the tour-guide marketplace in which tourists can find specialty, off-the-beaten-path trips created by locals . We want to create an on demand spontaneous tour guide searching experience.
<h5>Day 3 of Project Mode</h5>
We've been making our app for 3 days, and I'm enjoying the process. We ran into our first merge conflicts yesterday on git. It was awful in the beginning, but I think we're getting the hang of it. Prior to project mode, I figured that my pace of learning would begin to slow down now that we no longer sit for lectures. That thought is so far from the truth.

This weekend, I learned how to properly solve a merge conflict on Xcode; I learned how to integrate xibs, collection views, and tab bar views in my projects. It feels empowering self-sufficient and not always rely on our instructors!
<p style="text-align:center;"><strong>On to Week 10.</strong></p>


<hr />

<h2 style="text-align:center;">Week 10</h2>
<p class="intro" style="text-align:center;">Nibbin' and Xibbin'</p>
<span style="line-height:1.5;">
Our app is slowly coming together. It's become apparent that collaborating with 3 o<img class="alignright wp-image-797" style="border:2px solid #f0f0f0;" src="https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-10-03-at-1-46-29-pm.png?w=165" alt="Screen Shot 2015-10-03 at 1.46.29 PM" width="275" height="500" />ther developers can be extremely difficult. I came into this capstone project imagining that our app can and will be pushed to the app store. But as our lead instructor pointed out, the point of this project isn't meant for each group to divide work on what each person is best at. Rather, you should be focusing on what you suck at. And if that's the case, it becomes clear that our broader goals to experiment and learn are not conducive to getting this thing out in production. I'm sure it's possible; past students have done it
before, but not only did we shoot for the damn stars with this project idea, getting paid as a tour guide is illegal without a license. Yeah.
</span>

Despite the overwhelming stress and crunch time pace of school, I grew tremendously as an developer this week. More so than any other week over the past three weeks. I have more confidence in my ability to code and I feel incredibly self-sufficient.

I understand xibs a whole lot better now that I've made 10+ of them. I have a stronger handle on implementing custom delegates. In our project, I created a filter tour class which returned a sorted array that allowed my table view datasource to display a segmented control table view. I also integrated a completion block with that process as well! Fetching the user's sorted tours occurred asynchronously and only when the operation completed, a two-dimensional array would get passed back.

In our tour guide project, I've also incorporated vertical and horizontal scroll views, as well as collection views in our project. Like I mentioned above, I understand blocks and its design pattern purpose now that I've had a chance to play with it and create my own callbacks.
<p style="text-align:center;">[wpvideo 3pkAGpMn w = 350]</p>
We have one more week left and we're beginning to feel the pressure.
You can get a lot done coding for 5 days, but it's easy to assume a mission impossible coding sprint will get a 30% complete app done. It's not healthy to try— and on top of that, the goals to finish the 70% will more often end up not happening. I've been a victim of that too many times, and I wanted to make sure our team did not fall into that trap either. Let's finish next week strong.
<p style="text-align:center;"><strong>On to Week 11.</strong></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>549</wp:post_id>
  <wp:post_date>2015-08-10 13:13:00</wp:post_date>
  <wp:post_date_gmt>2015-08-10 13:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>week-9-10-at-flatiron-school</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <category domain="post_tag" nicename="flatiron"><![CDATA[flatiron]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15440770239]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[551]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>custom table view cell with xib</title>
  <link>http://leojkwan.com/2015/08/10/week-9-10-at-flatiron-school/screen-shot-2015-08-27-at-1-06-29-pm-918eb8ab4f374209af48fa6b4c0c2b3b/</link>
  <pubDate>Thu, 27 Aug 2015 17:12:53 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-27-at-1-06-29-pm-918eb8ab4f374209af48fa6b4c0c2b3b.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>551</wp:post_id>
  <wp:post_date>2015-08-27 17:12:53</wp:post_date>
  <wp:post_date_gmt>2015-08-27 17:12:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-08-27-at-1-06-29-pm-918eb8ab4f374209af48fa6b4c0c2b3b</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>549</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-08-27-at-1-06-29-pm-918eb8ab4f374209af48fa6b4c0c2b3b.png</wp:attachment_url>
</item>
<item>
  <title>iOS Projects</title>
  <link>http://leojkwan.com/projects/</link>
  <pubDate>Fri, 04 Sep 2015 15:03:13 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=560</guid>
  <description/>
  <content:encoded><![CDATA[[portfolio display_types=true display_tags=true display_content = true include_type=ios-projects columns=2 showposts=10 orderby=title]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>560</wp:post_id>
  <wp:post_date>2015-09-04 15:03:13</wp:post_date>
  <wp:post_date_gmt>2015-09-04 15:03:13</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>projects</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Muse- Journal with Sound.</title>
  <link>http://leojkwan.com/portfolio/muse-music-pinning-journal-app/</link>
  <pubDate>Fri, 04 Sep 2015 15:02:38 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?post_type=jetpack-portfolio&amp;p=562</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;">A journaling app combining your stories with your favorite music. Read and listen to your past entries like the day you wrote it.</h2>
<p class="intro" style="text-align:left;"><span style="text-decoration:underline;">Key Features</span></p>
<p style="text-align:left;">—Pin songs to your journal entries and play back later.
—Tag your current mood
—Showcase full-sized cover photos
—Optimized for Apple Music; discover relevant songs based on your music pins.
—Select from over 10 stunning HD background themes to complement your Muse writing experience.</p>
<p class="intro"><u>Screenshots</u></p>
<p class="intro"><a href="https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-46-pm.png"><img class="alignnone size-medium wp-image-826" src="https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-46-pm.png?w=169" alt="SS4" width="169" height="300" /></a> <a href="https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-43-pm.png"><img class="alignnone size-medium wp-image-827" src="https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-43-pm.png?w=169" alt="SS3" width="169" height="300" /></a> <a href="https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-40-pm.png"><img class="alignnone wp-image-828 size-medium" src="https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-40-pm.png?w=169" alt="SS2" width="169" height="300" /></a></p>
<p class="intro"><a href="https://itunes.apple.com/us/app/muse-journal-with-sound/id1044888483?ls=1&amp;mt=8"><img class="alignnone wp-image-830 size-thumbnail" src="https://leokwanblog.files.wordpress.com/2015/09/download_on_the_app_store_badge_us-uk_135x401.png?w=150" alt="Download_on_the_App_Store_Badge_US-UK_135x40" width="150" height="44" /></a></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>562</wp:post_id>
  <wp:post_date>2015-09-04 15:02:38</wp:post_date>
  <wp:post_date_gmt>2015-09-04 15:02:38</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>muse-music-pinning-journal-app</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>jetpack-portfolio</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="jetpack-portfolio-type" nicename="ios"><![CDATA[iOS]]></category>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[824]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14430524402]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Resume</title>
  <link>http://leojkwan.com/resume/</link>
  <pubDate>Mon, 07 Sep 2015 03:00:28 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=600</guid>
  <description/>
  <content:encoded><![CDATA[<a href="https://leokwanblog.files.wordpress.com/2015/09/google-copy-2.jpg"><img class="alignright wp-image-612" style="border:3px solid #f2f2f2;margin-right:50px;" src="https://leokwanblog.files.wordpress.com/2015/09/google-copy-2.jpg?w=244" alt="coverImage" width="162" height="200" /></a>

<b>EMAIL</b><span style="font-weight:400;">: leojkwan@gmail.com</span>
<b>PHONE:</b><span style="font-weight:400;"> 646-267-6276</span>
<b>GITHUB: @</b><span style="font-weight:400;"><a href="https://github.com/leojkwan">leojkwan</a></span>
<b>LINKEDIN:</b><span style="font-weight:400;"> @</span><span style="font-weight:400;"><a href="https://www.linkedin.com/in/leojkwan">leojkwan</a></span>
<h5></h5>
<strong> </strong>
<h3>BIO</h3>

<hr />

<h5></h5>
<p class="p1">With a background in physical therapy and sports performance, my biggest strength is found in collaborative environments because I appreciate the different approaches others bring to solving a problem. Whether it’s a disgruntled post-surgical patient or a more efficient way for objects in code to communicate with each other— I am quick in finding ways to contribute and create a positive impact in an organization.</p>
<p class="p1">Like most programmers without a traditional computer science degree, I started programming through self-interest. It was during the rising popularity of wearable technology when I realized computer programming was so versatile that it could relate entirely to what I did as a strength coach at New York University.</p>
<p class="p1">Eventually, I applied to the Flatiron School, where I met some of the most knowledgable instructors who have helped grow as a junior developer. I built a strong foundation of object oriented programming as well as the Cocoa Framework, particularly in Objective-C. Currently, I'd love to contribute my efforts to a growing company in New York City, while continually expanding my strength in programming.</p>
<p class="p1">When not coding, I enjoy playing basketball, lifting with my kettle bells, and shooting with my DSLR camera!</p>
<strong> </strong>
<h3>APPLICATIONS BUILT</h3>

<hr />

<h4><a href="https://github.com/learn-co-students/BadBoys3">Traveler</a></h4>
<strong>An app that connects tourists with locals who provide unique themed tours of their city.</strong>
<p style="padding-left:30px;"><span style="font-weight:400;">+ Integrated Google Places Autocomplete API for searching and selecting locations when creating a tour.</span></p>
<p style="padding-left:30px;"><span style="font-weight:400;">+ Implemented a custom delegate for clean communication between view controllers.</span></p>
<p style="padding-left:30px;"><span style="font-weight:400;">+ Used Parse backend services to manage tour guide and tourist relationships.</span></p>

<h4><a href="https://github.com/leojkwan/MuseApp">Muse</a></h4>
<strong>A journaling app with music pinning capabilities; users can revisit old entries that playback pinned songs from the moment of writing.</strong>
<p style="padding-left:30px;"><span style="font-weight:400;">+ Leveraged MPMediaQuery with NSPredicate filters to identify the currently playing song.</span></p>
<p style="padding-left:30px;"><span style="font-weight:400;">+ Integrated MPMusicPlayerController to play pinned songs from Apple Music and local library.</span></p>
<p style="padding-left:30px;"><span style="font-weight:400;">+ Used Parse backend services to store journal entries along with its accompanying music playlist.</span></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>600</wp:post_id>
  <wp:post_date>2015-09-07 03:00:28</wp:post_date>
  <wp:post_date_gmt>2015-09-07 03:00:28</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>resume</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>switch_like_status</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>LeoKwan_FISResume.c5033d565856442688d4f2e3a9285e48</title>
  <link>http://leojkwan.com/resume/leokwan_fisresume-c5033d565856442688d4f2e3a9285e48/</link>
  <pubDate>Mon, 07 Sep 2015 01:01:26 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/leokwan_fisresume-c5033d565856442688d4f2e3a9285e48.pdf</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>601</wp:post_id>
  <wp:post_date>2015-09-07 01:01:26</wp:post_date>
  <wp:post_date_gmt>2015-09-07 01:01:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>leokwan_fisresume-c5033d565856442688d4f2e3a9285e48</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>600</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/leokwan_fisresume-c5033d565856442688d4f2e3a9285e48.pdf</wp:attachment_url>
</item>
<item>
  <title>cover_image</title>
  <link>http://leojkwan.com/resume/google-copy/</link>
  <pubDate>Mon, 07 Sep 2015 01:53:18 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/google-copy.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>627</wp:post_id>
  <wp:post_date>2015-09-07 01:53:18</wp:post_date>
  <wp:post_date_gmt>2015-09-07 01:53:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>google-copy</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>600</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/google-copy.jpg</wp:attachment_url>
</item>
<item>
  <title>coverImage</title>
  <link>http://leojkwan.com/resume/coverimage/</link>
  <pubDate>Mon, 07 Sep 2015 02:00:13 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/coverimage.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>629</wp:post_id>
  <wp:post_date>2015-09-07 02:00:13</wp:post_date>
  <wp:post_date_gmt>2015-09-07 02:00:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>coverimage</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>600</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/coverimage.jpg</wp:attachment_url>
</item>
<item>
  <title>Sports Performance</title>
  <link>http://leojkwan.com/sports-performance/</link>
  <pubDate>Mon, 07 Sep 2015 22:50:33 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=675</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>675</wp:post_id>
  <wp:post_date>2015-09-07 22:50:33</wp:post_date>
  <wp:post_date_gmt>2015-09-07 22:50:33</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>sports-performance</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Muse</title>
  <link>http://leojkwan.com/muse/</link>
  <pubDate>Mon, 07 Sep 2015 22:54:08 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=678</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>678</wp:post_id>
  <wp:post_date>2015-09-07 22:54:08</wp:post_date>
  <wp:post_date_gmt>2015-09-07 22:54:08</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>muse</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Traveler</title>
  <link>http://leojkwan.com/traveler/</link>
  <pubDate>Mon, 07 Sep 2015 22:55:24 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?page_id=680</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>680</wp:post_id>
  <wp:post_date>2015-09-07 22:55:24</wp:post_date>
  <wp:post_date_gmt>2015-09-07 22:55:24</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>traveler</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Programming</title>
  <link>http://leojkwan.com/2015/09/07/687/</link>
  <pubDate>Mon, 07 Sep 2015 23:01:08 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=687</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>687</wp:post_id>
  <wp:post_date>2015-09-07 23:01:08</wp:post_date>
  <wp:post_date_gmt>2015-09-07 23:01:08</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>687</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="primary-menu"><![CDATA[Primary Menu]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[category]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[656]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SPORTS PERFORMANCE</title>
  <link>http://leojkwan.com/2015/09/08/688/</link>
  <pubDate>Tue, 08 Sep 2015 14:58:35 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=688</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>688</wp:post_id>
  <wp:post_date>2015-09-08 14:58:35</wp:post_date>
  <wp:post_date_gmt>2015-09-08 14:58:35</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>688</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="sports-performance"><![CDATA[SPORTS PERFORMANCE]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[269407]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[category]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>iOS Design Patterns: Delegation</title>
  <link>http://leojkwan.com/2015/09/08/design-patterns-delegation-in-swift/</link>
  <pubDate>Tue, 08 Sep 2015 16:01:41 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=689</guid>
  <description/>
  <content:encoded><![CDATA[<h4>Knowing what design pattern to implement in your code is one of the most important skills to have as a competent iOS developer.</h4>
No, design patterns have nothing to do with user interface or visual design-who would ever think that? -scratch head- Rather, they are reusable solutions that solve common problems, particularly with communication between objects in code.

There are many powerful design patterns found in iOS development. For this blog post, I wanted to expand on the <strong>delegate pattern</strong> in iOS.<!--more-->

<hr />

<h2></h2>
<h2><strong>What it delegation?</strong></h2>
Delegation is a variation of a common design pattern in object oriented programming known a <em>decorator</em> pattern, in which a user can 'wrap' additional functionality to an object without interfering its class structure.

Pertaining to iOS, delegation is a mechanism in which one object acts on behalf of another object. It allows objects to avoid subclassing from a ‘parent’ class just to inherit it’s parent’s capabilities. Inheritance patterns make a child object highly dependent of its parent, which is considered ‘tight coupling’. As a result, the single responsibility principle and separation of concerns between these classes begin to blur, and that’s bad.
<h3>How delegation fixes that.</h3>
Delegation remedies tight coupling because the only thing binding two objects together then is simply an agreement that the delegate object will implement certain methods that fulfill a particular responsibility. A perfect example of delegation found in iOS programming is the relationship between UITableView and UIViewController.
A UITableView is not aware of how many rows and sections it should present; it just knows that it has to present some visual representation of a table view, which is really just an ordered set of data. The task of providing table view values such as number of rows, sections, and cell height is designed for the UITableView delegate, which is usually a UIViewController that says, “I will be in charge of displaying specific data to your table view.” We achieve that by setting the view controller as the table view delegate like this.

[code language="objc"]
self.tableview.delegate = self
[/code]

This powerful relationship between UITableView and UIViewController is considered very loose- and within computer programming, that’s a wonderful thing because it allows our view controller to be more versatile in the future. After all, it can be the delegate not just for tableviews, but scrollviews, search bars, keyboards, etc.

<hr />

<h2><strong>Implementation.</strong></h2>
We covered how powerful delegating tasks can be without directly inheriting from a parent class just for its desired functions. Let’s consider how we’re going to get on object like UIViewController to implement methods and functionality from an otherwise incompatible object like UITableView. This is where Protocols come in.
<h3><strong>Protocols.</strong></h3>
A protocol is exactly what it means in the real world: a set of procedures, a system of rules, some official agreement between parties. When you define a protocol with functions, any object that ‘conforms’ to that protocol <em>must</em> implement its functions.

Well, that’s not entirely true.

In Objective-C, you had the option of declaring which protocol function implementations were required and optional. With Swift, there is currently no official way to do that. You can write an Objective-C or Swift protocol depending on what suits you.

In Swift, this is how a protocol is defined:

[code language="objc"]
protocol LeoProtocol {
  func coolFunction()
}
[/code]

Here is an implementation of a class conforming to the LeoProtocol:

[code language="objc"]
class someClass: LeoProtocol {
  func coolFunction() {
  // implementation of this protocol function
  }
}
[/code]

However, if you want to define a protocol with optional methods in Swift, you will need to declare an <strong>Objective-C</strong> protocol; the directive looks like this:

[code language="objc"]
@objc protocol LeoProtocol {
    func coolFunction()
    optional func coolOptionalFunction()
}
[/code]


<hr />

<h2><b>Summary</b></h2>
In short, the general steps to defining a protocol in Swift are:
<ol>
	<li>Write out your a protocol functions</li>
	<li>Add a delegate property specifying the type as the protocol</li>
	<li>Assign any object that conforms to the protocol to that delegate property</li>
</ol>
Feel free to comment below if you think there's anything I missed or should clarify.

The next design pattern post will be about the <strong>Observer</strong>.

<hr />
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>689</wp:post_id>
  <wp:post_date>2015-09-08 16:01:41</wp:post_date>
  <wp:post_date_gmt>2015-09-08 16:01:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>design-patterns-delegation-in-swift</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <category domain="post_tag" nicename="code-2"><![CDATA[code]]></category>
  <category domain="post_tag" nicename="design-pattern"><![CDATA[design pattern]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14567377035]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Week 11 &amp; 12 Summary</title>
  <link>http://leojkwan.com/2015/08/27/week-11-12-summary/</link>
  <pubDate>Thu, 27 Aug 2015 14:12:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=753</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:center;">Week 11</h2>
<p class="intro" style="text-align:center;">Crunched for time.</p>
<span style="line-height:1.5;">There is barely any time to blog during project mode. It's a long 2 week sprint and our team still has a lot to get done. It's frustrating because everyone on our team is new to this, but we are learning so much. There is no better way to learn about effective design pattern and features in iOS than devoting 3 weeks time to develop and app that you care about. Time is limited so learning new concepts quickly is not an option. I love the experience, but I can't wait for this project to be over so that I can reflect on my personal growth here.</span><!--more-->

<hr />

<h2 style="text-align:center;">Week 12</h2>
<p class="intro" style="text-align:center;">Day before meeting companies.</p>
Our team just finished the tour guide app. We now have 12 hours before speaking to employers in the morning. I just don't feel prepared. I spent the last 3 weeks with my head down hammering away on code, and now it's time to show others what we've accomplished.

Leo, it's going to be OK.

The last three days of class here at Flatiron felt weird. We completed our speed dating hiring day yesterday and many of us are working on their resumes and potential interviews. We covered Swift syntax and computer science work that we might run into during a technical interview, but I get the feeling that our class' motivation to learn is sapped. People are just ready to move on to the next point of their lives. Whatever's next, I'm going to miss this place.

Here's a quick demo of our app flow.

[vimeo https://vimeo.com/137328306 w= 800]
Program is over, but our relationship with Flatiron will never end. We're always welcome to stop by, get some work done, or just say hi to people. Things have come full circle during my three months here. I remember during my first 2 weeks, there was a Web development cohort just about to finish and move on to find jobs as programmers.
I remember thinking to myself:

<em>"I am so far away from what they are doing as developers. I can't imagine what they were going through: finding a job, making apps on your own, confidently calling yourself a developer... hopefully that will be me when I'm done</em>."

Now I'm in their shoes. Yes, I am confident calling myself an iOS developer. Yes, I can write my own apps. And yes, I am confident that my skills can contribute to a company's success. I know there is still a world to learn in this industry, and I'm positive that I'll never stop teaching myself more— but to see where I came from on June 1 to where I stand now is an incredible feat that I am proud about, and I don't think I tell myself that enough.
<p style="text-align:center;"><strong>On to the next one.</strong></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>753</wp:post_id>
  <wp:post_date>2015-08-27 14:12:00</wp:post_date>
  <wp:post_date_gmt>2015-08-27 14:12:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>week-11-12-summary</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15441083646]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_time_439212c2b4f8af3015f3e67f603ddb34</wp:meta_key>
    <wp:meta_value><![CDATA[1443895753]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_time_c300111308ae3a31902f718df58bc9c5</wp:meta_key>
    <wp:meta_value><![CDATA[1443895682]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_439212c2b4f8af3015f3e67f603ddb34</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-vimeo"><iframe src="https://player.vimeo.com/video/137328306" width="123" height="219" frameborder="0" title="Traveler" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c300111308ae3a31902f718df58bc9c5</wp:meta_key>
    <wp:meta_value><![CDATA[<div class="embed-vimeo"><iframe src="https://player.vimeo.com/video/137328306" width="300" height="533" frameborder="0" title="Traveler" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Home Screens Copy 2@3x</title>
  <link>http://leojkwan.com/?attachment_id=775</link>
  <pubDate>Thu, 01 Oct 2015 23:50:18 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/home-screens-copy-23x.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>775</wp:post_id>
  <wp:post_date>2015-10-01 23:50:18</wp:post_date>
  <wp:post_date_gmt>2015-10-01 23:50:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>home-screens-copy-23x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/home-screens-copy-23x.jpg</wp:attachment_url>
</item>
<item>
  <title>Home Screens Copy 3@3x</title>
  <link>http://leojkwan.com/?attachment_id=776</link>
  <pubDate>Thu, 01 Oct 2015 23:50:20 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/home-screens-copy-33x.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>776</wp:post_id>
  <wp:post_date>2015-10-01 23:50:20</wp:post_date>
  <wp:post_date_gmt>2015-10-01 23:50:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>home-screens-copy-33x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/home-screens-copy-33x.jpg</wp:attachment_url>
</item>
<item>
  <title>Home Screens Copy@3x</title>
  <link>http://leojkwan.com/?attachment_id=777</link>
  <pubDate>Thu, 01 Oct 2015 23:50:22 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/home-screens-copy3x.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>777</wp:post_id>
  <wp:post_date>2015-10-01 23:50:22</wp:post_date>
  <wp:post_date_gmt>2015-10-01 23:50:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>home-screens-copy3x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/home-screens-copy3x.jpg</wp:attachment_url>
</item>
<item>
  <title>Home Screens@3x</title>
  <link>http://leojkwan.com/?attachment_id=778</link>
  <pubDate>Thu, 01 Oct 2015 23:50:24 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/home-screens3x.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>778</wp:post_id>
  <wp:post_date>2015-10-01 23:50:24</wp:post_date>
  <wp:post_date_gmt>2015-10-01 23:50:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>home-screens3x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/home-screens3x.jpg</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-10-03 at 1.46.42 PM</title>
  <link>http://leojkwan.com/?attachment_id=783</link>
  <pubDate>Sat, 03 Oct 2015 17:47:57 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-46-42-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>783</wp:post_id>
  <wp:post_date>2015-10-03 17:47:57</wp:post_date>
  <wp:post_date_gmt>2015-10-03 17:47:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-10-03-at-1-46-42-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-46-42-pm.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-10-03 at 1.46.08 PM</title>
  <link>http://leojkwan.com/?attachment_id=785</link>
  <pubDate>Sat, 03 Oct 2015 17:48:05 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-46-08-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>785</wp:post_id>
  <wp:post_date>2015-10-03 17:48:05</wp:post_date>
  <wp:post_date_gmt>2015-10-03 17:48:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-10-03-at-1-46-08-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-46-08-pm.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-10-03 at 1.45.56 PM</title>
  <link>http://leojkwan.com/?attachment_id=786</link>
  <pubDate>Sat, 03 Oct 2015 17:48:08 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-45-56-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>786</wp:post_id>
  <wp:post_date>2015-10-03 17:48:08</wp:post_date>
  <wp:post_date_gmt>2015-10-03 17:48:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-10-03-at-1-45-56-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-45-56-pm.png</wp:attachment_url>
</item>
<item>
  <title>scrolling-Traveler</title>
  <link>http://leojkwan.com/2015/08/10/week-9-10-at-flatiron-school/scrolling-traveler/</link>
  <pubDate>Sat, 03 Oct 2015 17:51:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/scrolling-traveler.mp4</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>787</wp:post_id>
  <wp:post_date>2015-10-03 17:51:00</wp:post_date>
  <wp:post_date_gmt>2015-10-03 17:51:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>scrolling-traveler</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>549</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/scrolling-traveler.mp4</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-10-03 at 1.46.29 PM</title>
  <link>http://leojkwan.com/?attachment_id=796</link>
  <pubDate>Sat, 03 Oct 2015 17:57:30 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-46-29-pm1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>796</wp:post_id>
  <wp:post_date>2015-10-03 17:57:30</wp:post_date>
  <wp:post_date_gmt>2015-10-03 17:57:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-10-03-at-1-46-29-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/10/screen-shot-2015-10-03-at-1-46-29-pm1.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2015-10-03 at 1.46.29 PM</title>
  <link>http://leojkwan.com/2015/08/10/week-9-10-at-flatiron-school/screen-shot-2015-10-03-at-1-46-29-pm-2/</link>
  <pubDate>Sat, 03 Oct 2015 17:58:06 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-10-03-at-1-46-29-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>797</wp:post_id>
  <wp:post_date>2015-10-03 17:58:06</wp:post_date>
  <wp:post_date_gmt>2015-10-03 17:58:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2015-10-03-at-1-46-29-pm-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>549</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/08/screen-shot-2015-10-03-at-1-46-29-pm.png</wp:attachment_url>
</item>
<item>
  <title>Simulator Screen Shot Oct 24, 2015, 12.39.25 PM</title>
  <link>http://leojkwan.com/portfolio/muse-music-pinning-journal-app/simulator-screen-shot-oct-24-2015-12-39-25-pm/</link>
  <pubDate>Sat, 24 Oct 2015 16:40:38 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-24-2015-12-39-25-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>824</wp:post_id>
  <wp:post_date>2015-10-24 16:40:38</wp:post_date>
  <wp:post_date_gmt>2015-10-24 16:40:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>simulator-screen-shot-oct-24-2015-12-39-25-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>562</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-24-2015-12-39-25-pm.png</wp:attachment_url>
</item>
<item>
  <title>SS4</title>
  <link>http://leojkwan.com/portfolio/muse-music-pinning-journal-app/simulator-screen-shot-oct-21-2015-2-20-46-pm/</link>
  <pubDate>Sat, 24 Oct 2015 16:42:56 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-46-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>826</wp:post_id>
  <wp:post_date>2015-10-24 16:42:56</wp:post_date>
  <wp:post_date_gmt>2015-10-24 16:42:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>simulator-screen-shot-oct-21-2015-2-20-46-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>562</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-46-pm.png</wp:attachment_url>
</item>
<item>
  <title>SS3</title>
  <link>http://leojkwan.com/portfolio/muse-music-pinning-journal-app/simulator-screen-shot-oct-21-2015-2-20-43-pm/</link>
  <pubDate>Sat, 24 Oct 2015 16:43:06 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-43-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>827</wp:post_id>
  <wp:post_date>2015-10-24 16:43:06</wp:post_date>
  <wp:post_date_gmt>2015-10-24 16:43:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>simulator-screen-shot-oct-21-2015-2-20-43-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>562</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-43-pm.png</wp:attachment_url>
</item>
<item>
  <title>SS2</title>
  <link>http://leojkwan.com/portfolio/muse-music-pinning-journal-app/simulator-screen-shot-oct-21-2015-2-20-40-pm/</link>
  <pubDate>Sat, 24 Oct 2015 16:43:13 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-40-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>828</wp:post_id>
  <wp:post_date>2015-10-24 16:43:13</wp:post_date>
  <wp:post_date_gmt>2015-10-24 16:43:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>simulator-screen-shot-oct-21-2015-2-20-40-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>562</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/simulator-screen-shot-oct-21-2015-2-20-40-pm.png</wp:attachment_url>
</item>
<item>
  <title>Download_on_the_App_Store_Badge_US-UK_135x40</title>
  <link>http://leojkwan.com/portfolio/muse-music-pinning-journal-app/download_on_the_app_store_badge_us-uk_135x40-2/</link>
  <pubDate>Sat, 24 Oct 2015 16:45:32 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/09/download_on_the_app_store_badge_us-uk_135x401.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>830</wp:post_id>
  <wp:post_date>2015-10-24 16:45:32</wp:post_date>
  <wp:post_date_gmt>2015-10-24 16:45:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>download_on_the_app_store_badge_us-uk_135x40-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>562</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/09/download_on_the_app_store_badge_us-uk_135x401.png</wp:attachment_url>
</item>
<item>
  <title>Soho</title>
  <link>http://leojkwan.com/aboutme/stones/</link>
  <pubDate>Tue, 27 Oct 2015 19:38:55 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leokwanblog.files.wordpress.com/2015/05/stones.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>834</wp:post_id>
  <wp:post_date>2015-10-27 19:38:55</wp:post_date>
  <wp:post_date_gmt>2015-10-27 19:38:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>stones</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>6</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://leokwanblog.files.wordpress.com/2015/05/stones.jpeg</wp:attachment_url>
</item>
<item>
  <title>Portfolio</title>
  <link>http://leojkwan.com/2015/11/05/portfolio/</link>
  <pubDate>Thu, 05 Nov 2015 20:11:35 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=838</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>838</wp:post_id>
  <wp:post_date>2015-11-05 20:11:35</wp:post_date>
  <wp:post_date_gmt>2015-11-05 20:11:35</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>portfolio</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="primary-menu"><![CDATA[Primary Menu]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[838]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://leojkwan.com/portfolio]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Muse - Journal with sound</title>
  <link>http://leojkwan.com/2015/11/05/muse-journal-with-sound/</link>
  <pubDate>Thu, 05 Nov 2015 20:13:05 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=839</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>839</wp:post_id>
  <wp:post_date>2015-11-05 20:13:05</wp:post_date>
  <wp:post_date_gmt>2015-11-05 20:13:05</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>muse-journal-with-sound</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>3</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="primary-menu"><![CDATA[Primary Menu]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.musetheapp.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[839]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[838]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A View Controller's life cycle in Objective-C</title>
  <link>http://leojkwan.com/?p=840</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>leojkwan</dc:creator>
  <guid isPermaLink="false">http://leojkwan.com/?p=840</guid>
  <description/>
  <content:encoded><![CDATA[In iOS programming, it’s sometimes difficult to distinguish the division of labor between inherent methods that a UIViewController subclass calls on.

Where should I call this method viewDidLoad, or viewWillAppear? or viewDidAppear?

##ViewDidLoad
ViewDidLoad is where you want to do anything only once. For example, if you're initializing any views programmatically, it should be done just once.

#ViewWillAppear
The view controller calls ViewWillAppear every time a view's visibility changes. It occurs before a user gets to see anything, so this is a perfect time to prepare how your views get displayed.

A great example of something you can put in viewWillAppear is a scrollToTop method for a Scroll View. It may be important to display the upper most content after a user pops back or dismisses a detail view.

On the other hand, if you’re performing a network request that may take up to 2-3 seconds to pull down the view’s data, it would be preferable to place the network calls in ViewWillAppear

##ViewDidAppear
Like ViewWillAppear, this method get called every time the view appears, but only after the view is displayed for the user. ViewDidAppear would be fantastic for calling network requests because at least you leave the user with something to look at as he/she waits for the view to completely populate with data/images. If provides a responsive user experience instead of a frozen view as this view controller is getting segued in. Like most popular and well-designed apps you use, you can display call a progress HUD in viewDidAppear on a background thread to maintain interaction with users.
## ViewDidDisappear

The viewWillDisappear declaration is a handy method called by UIKit when your view controller exits from view. Many developers use viewDidDisappear to remove any instantiated observers from NSNotificationCenter. That way, you can be sure that the dismissed VC is no longer subscribed and listening for notification updates.

<pre>
-(void) viewWillDisappear:(BOOL)animated {
[super viewWillDisappear:animated];
[[NSNotificationCenter defaultCenter] removeObserver:self
name:@"aNotification"
object:nil];
}

</pre>

Another use case for viewDidDisappear is pausing or stopping a functionality in your dismissing view controller. In my Muse App, I allowed users to determine whether they wanted the current song playing in their detail entry view controller to pause on dismissal. If they do, I call on the view controller’s music player instance to pause playback in viewDidDisappear.

'' -(void)viewDidDisappear:(BOOL)animated {
'' [super viewDidDisappear:YES];
''
'' // PAUSE SONG IF SETTING IS YES
'' if ([MUSAutoPlayManager returnAutoPauseStatus] &amp;&amp; self.formattedPlaylistForThisEntry.count &gt; 0) {
'' [self.player pause];
'' }
'' }]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>840</wp:post_id>
  <wp:post_date>2015-11-20 04:00:43</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="code"><![CDATA[Code]]></category>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[81371866]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
